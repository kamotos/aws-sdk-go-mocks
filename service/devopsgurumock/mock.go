// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/devopsguru/devopsguruiface (interfaces: DevOpsGuruAPI)

// Package devopsgurumock is a generated GoMock package.
package devopsgurumock

import (
	context "context"
	reflect "reflect"

	request "github.com/aws/aws-sdk-go/aws/request"
	devopsguru "github.com/aws/aws-sdk-go/service/devopsguru"
	gomock "github.com/golang/mock/gomock"
)

// MockDevOpsGuruAPI is a mock of DevOpsGuruAPI interface.
type MockDevOpsGuruAPI struct {
	ctrl     *gomock.Controller
	recorder *MockDevOpsGuruAPIMockRecorder
}

// MockDevOpsGuruAPIMockRecorder is the mock recorder for MockDevOpsGuruAPI.
type MockDevOpsGuruAPIMockRecorder struct {
	mock *MockDevOpsGuruAPI
}

// NewMockDevOpsGuruAPI creates a new mock instance.
func NewMockDevOpsGuruAPI(ctrl *gomock.Controller) *MockDevOpsGuruAPI {
	mock := &MockDevOpsGuruAPI{ctrl: ctrl}
	mock.recorder = &MockDevOpsGuruAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDevOpsGuruAPI) EXPECT() *MockDevOpsGuruAPIMockRecorder {
	return m.recorder
}

// AddNotificationChannel mocks base method.
func (m *MockDevOpsGuruAPI) AddNotificationChannel(arg0 *devopsguru.AddNotificationChannelInput) (*devopsguru.AddNotificationChannelOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNotificationChannel", arg0)
	ret0, _ := ret[0].(*devopsguru.AddNotificationChannelOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddNotificationChannel indicates an expected call of AddNotificationChannel.
func (mr *MockDevOpsGuruAPIMockRecorder) AddNotificationChannel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNotificationChannel", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).AddNotificationChannel), arg0)
}

// AddNotificationChannelRequest mocks base method.
func (m *MockDevOpsGuruAPI) AddNotificationChannelRequest(arg0 *devopsguru.AddNotificationChannelInput) (*request.Request, *devopsguru.AddNotificationChannelOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNotificationChannelRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.AddNotificationChannelOutput)
	return ret0, ret1
}

// AddNotificationChannelRequest indicates an expected call of AddNotificationChannelRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) AddNotificationChannelRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNotificationChannelRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).AddNotificationChannelRequest), arg0)
}

// AddNotificationChannelWithContext mocks base method.
func (m *MockDevOpsGuruAPI) AddNotificationChannelWithContext(arg0 context.Context, arg1 *devopsguru.AddNotificationChannelInput, arg2 ...request.Option) (*devopsguru.AddNotificationChannelOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AddNotificationChannelWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.AddNotificationChannelOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddNotificationChannelWithContext indicates an expected call of AddNotificationChannelWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) AddNotificationChannelWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNotificationChannelWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).AddNotificationChannelWithContext), varargs...)
}

// DescribeAccountHealth mocks base method.
func (m *MockDevOpsGuruAPI) DescribeAccountHealth(arg0 *devopsguru.DescribeAccountHealthInput) (*devopsguru.DescribeAccountHealthOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccountHealth", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeAccountHealthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAccountHealth indicates an expected call of DescribeAccountHealth.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeAccountHealth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccountHealth", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeAccountHealth), arg0)
}

// DescribeAccountHealthRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeAccountHealthRequest(arg0 *devopsguru.DescribeAccountHealthInput) (*request.Request, *devopsguru.DescribeAccountHealthOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccountHealthRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeAccountHealthOutput)
	return ret0, ret1
}

// DescribeAccountHealthRequest indicates an expected call of DescribeAccountHealthRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeAccountHealthRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccountHealthRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeAccountHealthRequest), arg0)
}

// DescribeAccountHealthWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeAccountHealthWithContext(arg0 context.Context, arg1 *devopsguru.DescribeAccountHealthInput, arg2 ...request.Option) (*devopsguru.DescribeAccountHealthOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeAccountHealthWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeAccountHealthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAccountHealthWithContext indicates an expected call of DescribeAccountHealthWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeAccountHealthWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccountHealthWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeAccountHealthWithContext), varargs...)
}

// DescribeAccountOverview mocks base method.
func (m *MockDevOpsGuruAPI) DescribeAccountOverview(arg0 *devopsguru.DescribeAccountOverviewInput) (*devopsguru.DescribeAccountOverviewOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccountOverview", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeAccountOverviewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAccountOverview indicates an expected call of DescribeAccountOverview.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeAccountOverview(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccountOverview", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeAccountOverview), arg0)
}

// DescribeAccountOverviewRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeAccountOverviewRequest(arg0 *devopsguru.DescribeAccountOverviewInput) (*request.Request, *devopsguru.DescribeAccountOverviewOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccountOverviewRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeAccountOverviewOutput)
	return ret0, ret1
}

// DescribeAccountOverviewRequest indicates an expected call of DescribeAccountOverviewRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeAccountOverviewRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccountOverviewRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeAccountOverviewRequest), arg0)
}

// DescribeAccountOverviewWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeAccountOverviewWithContext(arg0 context.Context, arg1 *devopsguru.DescribeAccountOverviewInput, arg2 ...request.Option) (*devopsguru.DescribeAccountOverviewOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeAccountOverviewWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeAccountOverviewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAccountOverviewWithContext indicates an expected call of DescribeAccountOverviewWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeAccountOverviewWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccountOverviewWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeAccountOverviewWithContext), varargs...)
}

// DescribeAnomaly mocks base method.
func (m *MockDevOpsGuruAPI) DescribeAnomaly(arg0 *devopsguru.DescribeAnomalyInput) (*devopsguru.DescribeAnomalyOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAnomaly", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeAnomalyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAnomaly indicates an expected call of DescribeAnomaly.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeAnomaly(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAnomaly", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeAnomaly), arg0)
}

// DescribeAnomalyRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeAnomalyRequest(arg0 *devopsguru.DescribeAnomalyInput) (*request.Request, *devopsguru.DescribeAnomalyOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAnomalyRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeAnomalyOutput)
	return ret0, ret1
}

// DescribeAnomalyRequest indicates an expected call of DescribeAnomalyRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeAnomalyRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAnomalyRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeAnomalyRequest), arg0)
}

// DescribeAnomalyWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeAnomalyWithContext(arg0 context.Context, arg1 *devopsguru.DescribeAnomalyInput, arg2 ...request.Option) (*devopsguru.DescribeAnomalyOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeAnomalyWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeAnomalyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAnomalyWithContext indicates an expected call of DescribeAnomalyWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeAnomalyWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAnomalyWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeAnomalyWithContext), varargs...)
}

// DescribeEventSourcesConfig mocks base method.
func (m *MockDevOpsGuruAPI) DescribeEventSourcesConfig(arg0 *devopsguru.DescribeEventSourcesConfigInput) (*devopsguru.DescribeEventSourcesConfigOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEventSourcesConfig", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeEventSourcesConfigOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeEventSourcesConfig indicates an expected call of DescribeEventSourcesConfig.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeEventSourcesConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEventSourcesConfig", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeEventSourcesConfig), arg0)
}

// DescribeEventSourcesConfigRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeEventSourcesConfigRequest(arg0 *devopsguru.DescribeEventSourcesConfigInput) (*request.Request, *devopsguru.DescribeEventSourcesConfigOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEventSourcesConfigRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeEventSourcesConfigOutput)
	return ret0, ret1
}

// DescribeEventSourcesConfigRequest indicates an expected call of DescribeEventSourcesConfigRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeEventSourcesConfigRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEventSourcesConfigRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeEventSourcesConfigRequest), arg0)
}

// DescribeEventSourcesConfigWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeEventSourcesConfigWithContext(arg0 context.Context, arg1 *devopsguru.DescribeEventSourcesConfigInput, arg2 ...request.Option) (*devopsguru.DescribeEventSourcesConfigOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeEventSourcesConfigWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeEventSourcesConfigOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeEventSourcesConfigWithContext indicates an expected call of DescribeEventSourcesConfigWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeEventSourcesConfigWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEventSourcesConfigWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeEventSourcesConfigWithContext), varargs...)
}

// DescribeFeedback mocks base method.
func (m *MockDevOpsGuruAPI) DescribeFeedback(arg0 *devopsguru.DescribeFeedbackInput) (*devopsguru.DescribeFeedbackOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeFeedback", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeFeedbackOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeFeedback indicates an expected call of DescribeFeedback.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeFeedback(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeFeedback", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeFeedback), arg0)
}

// DescribeFeedbackRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeFeedbackRequest(arg0 *devopsguru.DescribeFeedbackInput) (*request.Request, *devopsguru.DescribeFeedbackOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeFeedbackRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeFeedbackOutput)
	return ret0, ret1
}

// DescribeFeedbackRequest indicates an expected call of DescribeFeedbackRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeFeedbackRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeFeedbackRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeFeedbackRequest), arg0)
}

// DescribeFeedbackWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeFeedbackWithContext(arg0 context.Context, arg1 *devopsguru.DescribeFeedbackInput, arg2 ...request.Option) (*devopsguru.DescribeFeedbackOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeFeedbackWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeFeedbackOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeFeedbackWithContext indicates an expected call of DescribeFeedbackWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeFeedbackWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeFeedbackWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeFeedbackWithContext), varargs...)
}

// DescribeInsight mocks base method.
func (m *MockDevOpsGuruAPI) DescribeInsight(arg0 *devopsguru.DescribeInsightInput) (*devopsguru.DescribeInsightOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInsight", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeInsightOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInsight indicates an expected call of DescribeInsight.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeInsight(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInsight", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeInsight), arg0)
}

// DescribeInsightRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeInsightRequest(arg0 *devopsguru.DescribeInsightInput) (*request.Request, *devopsguru.DescribeInsightOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInsightRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeInsightOutput)
	return ret0, ret1
}

// DescribeInsightRequest indicates an expected call of DescribeInsightRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeInsightRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInsightRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeInsightRequest), arg0)
}

// DescribeInsightWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeInsightWithContext(arg0 context.Context, arg1 *devopsguru.DescribeInsightInput, arg2 ...request.Option) (*devopsguru.DescribeInsightOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeInsightWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeInsightOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInsightWithContext indicates an expected call of DescribeInsightWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeInsightWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInsightWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeInsightWithContext), varargs...)
}

// DescribeOrganizationHealth mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationHealth(arg0 *devopsguru.DescribeOrganizationHealthInput) (*devopsguru.DescribeOrganizationHealthOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeOrganizationHealth", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeOrganizationHealthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeOrganizationHealth indicates an expected call of DescribeOrganizationHealth.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationHealth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationHealth", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationHealth), arg0)
}

// DescribeOrganizationHealthRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationHealthRequest(arg0 *devopsguru.DescribeOrganizationHealthInput) (*request.Request, *devopsguru.DescribeOrganizationHealthOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeOrganizationHealthRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeOrganizationHealthOutput)
	return ret0, ret1
}

// DescribeOrganizationHealthRequest indicates an expected call of DescribeOrganizationHealthRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationHealthRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationHealthRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationHealthRequest), arg0)
}

// DescribeOrganizationHealthWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationHealthWithContext(arg0 context.Context, arg1 *devopsguru.DescribeOrganizationHealthInput, arg2 ...request.Option) (*devopsguru.DescribeOrganizationHealthOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeOrganizationHealthWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeOrganizationHealthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeOrganizationHealthWithContext indicates an expected call of DescribeOrganizationHealthWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationHealthWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationHealthWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationHealthWithContext), varargs...)
}

// DescribeOrganizationOverview mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationOverview(arg0 *devopsguru.DescribeOrganizationOverviewInput) (*devopsguru.DescribeOrganizationOverviewOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeOrganizationOverview", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeOrganizationOverviewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeOrganizationOverview indicates an expected call of DescribeOrganizationOverview.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationOverview(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationOverview", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationOverview), arg0)
}

// DescribeOrganizationOverviewRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationOverviewRequest(arg0 *devopsguru.DescribeOrganizationOverviewInput) (*request.Request, *devopsguru.DescribeOrganizationOverviewOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeOrganizationOverviewRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeOrganizationOverviewOutput)
	return ret0, ret1
}

// DescribeOrganizationOverviewRequest indicates an expected call of DescribeOrganizationOverviewRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationOverviewRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationOverviewRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationOverviewRequest), arg0)
}

// DescribeOrganizationOverviewWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationOverviewWithContext(arg0 context.Context, arg1 *devopsguru.DescribeOrganizationOverviewInput, arg2 ...request.Option) (*devopsguru.DescribeOrganizationOverviewOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeOrganizationOverviewWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeOrganizationOverviewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeOrganizationOverviewWithContext indicates an expected call of DescribeOrganizationOverviewWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationOverviewWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationOverviewWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationOverviewWithContext), varargs...)
}

// DescribeOrganizationResourceCollectionHealth mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationResourceCollectionHealth(arg0 *devopsguru.DescribeOrganizationResourceCollectionHealthInput) (*devopsguru.DescribeOrganizationResourceCollectionHealthOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeOrganizationResourceCollectionHealth", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeOrganizationResourceCollectionHealthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeOrganizationResourceCollectionHealth indicates an expected call of DescribeOrganizationResourceCollectionHealth.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationResourceCollectionHealth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationResourceCollectionHealth", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationResourceCollectionHealth), arg0)
}

// DescribeOrganizationResourceCollectionHealthPages mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationResourceCollectionHealthPages(arg0 *devopsguru.DescribeOrganizationResourceCollectionHealthInput, arg1 func(*devopsguru.DescribeOrganizationResourceCollectionHealthOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeOrganizationResourceCollectionHealthPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeOrganizationResourceCollectionHealthPages indicates an expected call of DescribeOrganizationResourceCollectionHealthPages.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationResourceCollectionHealthPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationResourceCollectionHealthPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationResourceCollectionHealthPages), arg0, arg1)
}

// DescribeOrganizationResourceCollectionHealthPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationResourceCollectionHealthPagesWithContext(arg0 context.Context, arg1 *devopsguru.DescribeOrganizationResourceCollectionHealthInput, arg2 func(*devopsguru.DescribeOrganizationResourceCollectionHealthOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeOrganizationResourceCollectionHealthPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeOrganizationResourceCollectionHealthPagesWithContext indicates an expected call of DescribeOrganizationResourceCollectionHealthPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationResourceCollectionHealthPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationResourceCollectionHealthPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationResourceCollectionHealthPagesWithContext), varargs...)
}

// DescribeOrganizationResourceCollectionHealthRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationResourceCollectionHealthRequest(arg0 *devopsguru.DescribeOrganizationResourceCollectionHealthInput) (*request.Request, *devopsguru.DescribeOrganizationResourceCollectionHealthOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeOrganizationResourceCollectionHealthRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeOrganizationResourceCollectionHealthOutput)
	return ret0, ret1
}

// DescribeOrganizationResourceCollectionHealthRequest indicates an expected call of DescribeOrganizationResourceCollectionHealthRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationResourceCollectionHealthRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationResourceCollectionHealthRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationResourceCollectionHealthRequest), arg0)
}

// DescribeOrganizationResourceCollectionHealthWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeOrganizationResourceCollectionHealthWithContext(arg0 context.Context, arg1 *devopsguru.DescribeOrganizationResourceCollectionHealthInput, arg2 ...request.Option) (*devopsguru.DescribeOrganizationResourceCollectionHealthOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeOrganizationResourceCollectionHealthWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeOrganizationResourceCollectionHealthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeOrganizationResourceCollectionHealthWithContext indicates an expected call of DescribeOrganizationResourceCollectionHealthWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeOrganizationResourceCollectionHealthWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeOrganizationResourceCollectionHealthWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeOrganizationResourceCollectionHealthWithContext), varargs...)
}

// DescribeResourceCollectionHealth mocks base method.
func (m *MockDevOpsGuruAPI) DescribeResourceCollectionHealth(arg0 *devopsguru.DescribeResourceCollectionHealthInput) (*devopsguru.DescribeResourceCollectionHealthOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResourceCollectionHealth", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeResourceCollectionHealthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeResourceCollectionHealth indicates an expected call of DescribeResourceCollectionHealth.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeResourceCollectionHealth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourceCollectionHealth", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeResourceCollectionHealth), arg0)
}

// DescribeResourceCollectionHealthPages mocks base method.
func (m *MockDevOpsGuruAPI) DescribeResourceCollectionHealthPages(arg0 *devopsguru.DescribeResourceCollectionHealthInput, arg1 func(*devopsguru.DescribeResourceCollectionHealthOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResourceCollectionHealthPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeResourceCollectionHealthPages indicates an expected call of DescribeResourceCollectionHealthPages.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeResourceCollectionHealthPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourceCollectionHealthPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeResourceCollectionHealthPages), arg0, arg1)
}

// DescribeResourceCollectionHealthPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeResourceCollectionHealthPagesWithContext(arg0 context.Context, arg1 *devopsguru.DescribeResourceCollectionHealthInput, arg2 func(*devopsguru.DescribeResourceCollectionHealthOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeResourceCollectionHealthPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeResourceCollectionHealthPagesWithContext indicates an expected call of DescribeResourceCollectionHealthPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeResourceCollectionHealthPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourceCollectionHealthPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeResourceCollectionHealthPagesWithContext), varargs...)
}

// DescribeResourceCollectionHealthRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeResourceCollectionHealthRequest(arg0 *devopsguru.DescribeResourceCollectionHealthInput) (*request.Request, *devopsguru.DescribeResourceCollectionHealthOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResourceCollectionHealthRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeResourceCollectionHealthOutput)
	return ret0, ret1
}

// DescribeResourceCollectionHealthRequest indicates an expected call of DescribeResourceCollectionHealthRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeResourceCollectionHealthRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourceCollectionHealthRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeResourceCollectionHealthRequest), arg0)
}

// DescribeResourceCollectionHealthWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeResourceCollectionHealthWithContext(arg0 context.Context, arg1 *devopsguru.DescribeResourceCollectionHealthInput, arg2 ...request.Option) (*devopsguru.DescribeResourceCollectionHealthOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeResourceCollectionHealthWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeResourceCollectionHealthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeResourceCollectionHealthWithContext indicates an expected call of DescribeResourceCollectionHealthWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeResourceCollectionHealthWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourceCollectionHealthWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeResourceCollectionHealthWithContext), varargs...)
}

// DescribeServiceIntegration mocks base method.
func (m *MockDevOpsGuruAPI) DescribeServiceIntegration(arg0 *devopsguru.DescribeServiceIntegrationInput) (*devopsguru.DescribeServiceIntegrationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeServiceIntegration", arg0)
	ret0, _ := ret[0].(*devopsguru.DescribeServiceIntegrationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeServiceIntegration indicates an expected call of DescribeServiceIntegration.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeServiceIntegration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeServiceIntegration", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeServiceIntegration), arg0)
}

// DescribeServiceIntegrationRequest mocks base method.
func (m *MockDevOpsGuruAPI) DescribeServiceIntegrationRequest(arg0 *devopsguru.DescribeServiceIntegrationInput) (*request.Request, *devopsguru.DescribeServiceIntegrationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeServiceIntegrationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.DescribeServiceIntegrationOutput)
	return ret0, ret1
}

// DescribeServiceIntegrationRequest indicates an expected call of DescribeServiceIntegrationRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeServiceIntegrationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeServiceIntegrationRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeServiceIntegrationRequest), arg0)
}

// DescribeServiceIntegrationWithContext mocks base method.
func (m *MockDevOpsGuruAPI) DescribeServiceIntegrationWithContext(arg0 context.Context, arg1 *devopsguru.DescribeServiceIntegrationInput, arg2 ...request.Option) (*devopsguru.DescribeServiceIntegrationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeServiceIntegrationWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.DescribeServiceIntegrationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeServiceIntegrationWithContext indicates an expected call of DescribeServiceIntegrationWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) DescribeServiceIntegrationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeServiceIntegrationWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).DescribeServiceIntegrationWithContext), varargs...)
}

// GetCostEstimation mocks base method.
func (m *MockDevOpsGuruAPI) GetCostEstimation(arg0 *devopsguru.GetCostEstimationInput) (*devopsguru.GetCostEstimationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCostEstimation", arg0)
	ret0, _ := ret[0].(*devopsguru.GetCostEstimationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCostEstimation indicates an expected call of GetCostEstimation.
func (mr *MockDevOpsGuruAPIMockRecorder) GetCostEstimation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCostEstimation", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetCostEstimation), arg0)
}

// GetCostEstimationPages mocks base method.
func (m *MockDevOpsGuruAPI) GetCostEstimationPages(arg0 *devopsguru.GetCostEstimationInput, arg1 func(*devopsguru.GetCostEstimationOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCostEstimationPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetCostEstimationPages indicates an expected call of GetCostEstimationPages.
func (mr *MockDevOpsGuruAPIMockRecorder) GetCostEstimationPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCostEstimationPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetCostEstimationPages), arg0, arg1)
}

// GetCostEstimationPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) GetCostEstimationPagesWithContext(arg0 context.Context, arg1 *devopsguru.GetCostEstimationInput, arg2 func(*devopsguru.GetCostEstimationOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetCostEstimationPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetCostEstimationPagesWithContext indicates an expected call of GetCostEstimationPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) GetCostEstimationPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCostEstimationPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetCostEstimationPagesWithContext), varargs...)
}

// GetCostEstimationRequest mocks base method.
func (m *MockDevOpsGuruAPI) GetCostEstimationRequest(arg0 *devopsguru.GetCostEstimationInput) (*request.Request, *devopsguru.GetCostEstimationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCostEstimationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.GetCostEstimationOutput)
	return ret0, ret1
}

// GetCostEstimationRequest indicates an expected call of GetCostEstimationRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) GetCostEstimationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCostEstimationRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetCostEstimationRequest), arg0)
}

// GetCostEstimationWithContext mocks base method.
func (m *MockDevOpsGuruAPI) GetCostEstimationWithContext(arg0 context.Context, arg1 *devopsguru.GetCostEstimationInput, arg2 ...request.Option) (*devopsguru.GetCostEstimationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetCostEstimationWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.GetCostEstimationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCostEstimationWithContext indicates an expected call of GetCostEstimationWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) GetCostEstimationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCostEstimationWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetCostEstimationWithContext), varargs...)
}

// GetResourceCollection mocks base method.
func (m *MockDevOpsGuruAPI) GetResourceCollection(arg0 *devopsguru.GetResourceCollectionInput) (*devopsguru.GetResourceCollectionOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceCollection", arg0)
	ret0, _ := ret[0].(*devopsguru.GetResourceCollectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceCollection indicates an expected call of GetResourceCollection.
func (mr *MockDevOpsGuruAPIMockRecorder) GetResourceCollection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceCollection", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetResourceCollection), arg0)
}

// GetResourceCollectionPages mocks base method.
func (m *MockDevOpsGuruAPI) GetResourceCollectionPages(arg0 *devopsguru.GetResourceCollectionInput, arg1 func(*devopsguru.GetResourceCollectionOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceCollectionPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetResourceCollectionPages indicates an expected call of GetResourceCollectionPages.
func (mr *MockDevOpsGuruAPIMockRecorder) GetResourceCollectionPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceCollectionPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetResourceCollectionPages), arg0, arg1)
}

// GetResourceCollectionPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) GetResourceCollectionPagesWithContext(arg0 context.Context, arg1 *devopsguru.GetResourceCollectionInput, arg2 func(*devopsguru.GetResourceCollectionOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResourceCollectionPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetResourceCollectionPagesWithContext indicates an expected call of GetResourceCollectionPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) GetResourceCollectionPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceCollectionPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetResourceCollectionPagesWithContext), varargs...)
}

// GetResourceCollectionRequest mocks base method.
func (m *MockDevOpsGuruAPI) GetResourceCollectionRequest(arg0 *devopsguru.GetResourceCollectionInput) (*request.Request, *devopsguru.GetResourceCollectionOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceCollectionRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.GetResourceCollectionOutput)
	return ret0, ret1
}

// GetResourceCollectionRequest indicates an expected call of GetResourceCollectionRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) GetResourceCollectionRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceCollectionRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetResourceCollectionRequest), arg0)
}

// GetResourceCollectionWithContext mocks base method.
func (m *MockDevOpsGuruAPI) GetResourceCollectionWithContext(arg0 context.Context, arg1 *devopsguru.GetResourceCollectionInput, arg2 ...request.Option) (*devopsguru.GetResourceCollectionOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResourceCollectionWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.GetResourceCollectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceCollectionWithContext indicates an expected call of GetResourceCollectionWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) GetResourceCollectionWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceCollectionWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).GetResourceCollectionWithContext), varargs...)
}

// ListAnomaliesForInsight mocks base method.
func (m *MockDevOpsGuruAPI) ListAnomaliesForInsight(arg0 *devopsguru.ListAnomaliesForInsightInput) (*devopsguru.ListAnomaliesForInsightOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAnomaliesForInsight", arg0)
	ret0, _ := ret[0].(*devopsguru.ListAnomaliesForInsightOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAnomaliesForInsight indicates an expected call of ListAnomaliesForInsight.
func (mr *MockDevOpsGuruAPIMockRecorder) ListAnomaliesForInsight(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAnomaliesForInsight", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListAnomaliesForInsight), arg0)
}

// ListAnomaliesForInsightPages mocks base method.
func (m *MockDevOpsGuruAPI) ListAnomaliesForInsightPages(arg0 *devopsguru.ListAnomaliesForInsightInput, arg1 func(*devopsguru.ListAnomaliesForInsightOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAnomaliesForInsightPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListAnomaliesForInsightPages indicates an expected call of ListAnomaliesForInsightPages.
func (mr *MockDevOpsGuruAPIMockRecorder) ListAnomaliesForInsightPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAnomaliesForInsightPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListAnomaliesForInsightPages), arg0, arg1)
}

// ListAnomaliesForInsightPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListAnomaliesForInsightPagesWithContext(arg0 context.Context, arg1 *devopsguru.ListAnomaliesForInsightInput, arg2 func(*devopsguru.ListAnomaliesForInsightOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListAnomaliesForInsightPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListAnomaliesForInsightPagesWithContext indicates an expected call of ListAnomaliesForInsightPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListAnomaliesForInsightPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAnomaliesForInsightPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListAnomaliesForInsightPagesWithContext), varargs...)
}

// ListAnomaliesForInsightRequest mocks base method.
func (m *MockDevOpsGuruAPI) ListAnomaliesForInsightRequest(arg0 *devopsguru.ListAnomaliesForInsightInput) (*request.Request, *devopsguru.ListAnomaliesForInsightOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAnomaliesForInsightRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.ListAnomaliesForInsightOutput)
	return ret0, ret1
}

// ListAnomaliesForInsightRequest indicates an expected call of ListAnomaliesForInsightRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) ListAnomaliesForInsightRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAnomaliesForInsightRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListAnomaliesForInsightRequest), arg0)
}

// ListAnomaliesForInsightWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListAnomaliesForInsightWithContext(arg0 context.Context, arg1 *devopsguru.ListAnomaliesForInsightInput, arg2 ...request.Option) (*devopsguru.ListAnomaliesForInsightOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListAnomaliesForInsightWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.ListAnomaliesForInsightOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAnomaliesForInsightWithContext indicates an expected call of ListAnomaliesForInsightWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListAnomaliesForInsightWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAnomaliesForInsightWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListAnomaliesForInsightWithContext), varargs...)
}

// ListEvents mocks base method.
func (m *MockDevOpsGuruAPI) ListEvents(arg0 *devopsguru.ListEventsInput) (*devopsguru.ListEventsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListEvents", arg0)
	ret0, _ := ret[0].(*devopsguru.ListEventsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListEvents indicates an expected call of ListEvents.
func (mr *MockDevOpsGuruAPIMockRecorder) ListEvents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEvents", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListEvents), arg0)
}

// ListEventsPages mocks base method.
func (m *MockDevOpsGuruAPI) ListEventsPages(arg0 *devopsguru.ListEventsInput, arg1 func(*devopsguru.ListEventsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListEventsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListEventsPages indicates an expected call of ListEventsPages.
func (mr *MockDevOpsGuruAPIMockRecorder) ListEventsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEventsPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListEventsPages), arg0, arg1)
}

// ListEventsPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListEventsPagesWithContext(arg0 context.Context, arg1 *devopsguru.ListEventsInput, arg2 func(*devopsguru.ListEventsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListEventsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListEventsPagesWithContext indicates an expected call of ListEventsPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListEventsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEventsPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListEventsPagesWithContext), varargs...)
}

// ListEventsRequest mocks base method.
func (m *MockDevOpsGuruAPI) ListEventsRequest(arg0 *devopsguru.ListEventsInput) (*request.Request, *devopsguru.ListEventsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListEventsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.ListEventsOutput)
	return ret0, ret1
}

// ListEventsRequest indicates an expected call of ListEventsRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) ListEventsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEventsRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListEventsRequest), arg0)
}

// ListEventsWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListEventsWithContext(arg0 context.Context, arg1 *devopsguru.ListEventsInput, arg2 ...request.Option) (*devopsguru.ListEventsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListEventsWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.ListEventsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListEventsWithContext indicates an expected call of ListEventsWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListEventsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEventsWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListEventsWithContext), varargs...)
}

// ListInsights mocks base method.
func (m *MockDevOpsGuruAPI) ListInsights(arg0 *devopsguru.ListInsightsInput) (*devopsguru.ListInsightsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInsights", arg0)
	ret0, _ := ret[0].(*devopsguru.ListInsightsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInsights indicates an expected call of ListInsights.
func (mr *MockDevOpsGuruAPIMockRecorder) ListInsights(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInsights", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListInsights), arg0)
}

// ListInsightsPages mocks base method.
func (m *MockDevOpsGuruAPI) ListInsightsPages(arg0 *devopsguru.ListInsightsInput, arg1 func(*devopsguru.ListInsightsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInsightsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListInsightsPages indicates an expected call of ListInsightsPages.
func (mr *MockDevOpsGuruAPIMockRecorder) ListInsightsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInsightsPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListInsightsPages), arg0, arg1)
}

// ListInsightsPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListInsightsPagesWithContext(arg0 context.Context, arg1 *devopsguru.ListInsightsInput, arg2 func(*devopsguru.ListInsightsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListInsightsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListInsightsPagesWithContext indicates an expected call of ListInsightsPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListInsightsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInsightsPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListInsightsPagesWithContext), varargs...)
}

// ListInsightsRequest mocks base method.
func (m *MockDevOpsGuruAPI) ListInsightsRequest(arg0 *devopsguru.ListInsightsInput) (*request.Request, *devopsguru.ListInsightsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInsightsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.ListInsightsOutput)
	return ret0, ret1
}

// ListInsightsRequest indicates an expected call of ListInsightsRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) ListInsightsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInsightsRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListInsightsRequest), arg0)
}

// ListInsightsWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListInsightsWithContext(arg0 context.Context, arg1 *devopsguru.ListInsightsInput, arg2 ...request.Option) (*devopsguru.ListInsightsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListInsightsWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.ListInsightsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInsightsWithContext indicates an expected call of ListInsightsWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListInsightsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInsightsWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListInsightsWithContext), varargs...)
}

// ListNotificationChannels mocks base method.
func (m *MockDevOpsGuruAPI) ListNotificationChannels(arg0 *devopsguru.ListNotificationChannelsInput) (*devopsguru.ListNotificationChannelsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNotificationChannels", arg0)
	ret0, _ := ret[0].(*devopsguru.ListNotificationChannelsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNotificationChannels indicates an expected call of ListNotificationChannels.
func (mr *MockDevOpsGuruAPIMockRecorder) ListNotificationChannels(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNotificationChannels", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListNotificationChannels), arg0)
}

// ListNotificationChannelsPages mocks base method.
func (m *MockDevOpsGuruAPI) ListNotificationChannelsPages(arg0 *devopsguru.ListNotificationChannelsInput, arg1 func(*devopsguru.ListNotificationChannelsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNotificationChannelsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListNotificationChannelsPages indicates an expected call of ListNotificationChannelsPages.
func (mr *MockDevOpsGuruAPIMockRecorder) ListNotificationChannelsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNotificationChannelsPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListNotificationChannelsPages), arg0, arg1)
}

// ListNotificationChannelsPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListNotificationChannelsPagesWithContext(arg0 context.Context, arg1 *devopsguru.ListNotificationChannelsInput, arg2 func(*devopsguru.ListNotificationChannelsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListNotificationChannelsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListNotificationChannelsPagesWithContext indicates an expected call of ListNotificationChannelsPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListNotificationChannelsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNotificationChannelsPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListNotificationChannelsPagesWithContext), varargs...)
}

// ListNotificationChannelsRequest mocks base method.
func (m *MockDevOpsGuruAPI) ListNotificationChannelsRequest(arg0 *devopsguru.ListNotificationChannelsInput) (*request.Request, *devopsguru.ListNotificationChannelsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNotificationChannelsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.ListNotificationChannelsOutput)
	return ret0, ret1
}

// ListNotificationChannelsRequest indicates an expected call of ListNotificationChannelsRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) ListNotificationChannelsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNotificationChannelsRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListNotificationChannelsRequest), arg0)
}

// ListNotificationChannelsWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListNotificationChannelsWithContext(arg0 context.Context, arg1 *devopsguru.ListNotificationChannelsInput, arg2 ...request.Option) (*devopsguru.ListNotificationChannelsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListNotificationChannelsWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.ListNotificationChannelsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNotificationChannelsWithContext indicates an expected call of ListNotificationChannelsWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListNotificationChannelsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNotificationChannelsWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListNotificationChannelsWithContext), varargs...)
}

// ListOrganizationInsights mocks base method.
func (m *MockDevOpsGuruAPI) ListOrganizationInsights(arg0 *devopsguru.ListOrganizationInsightsInput) (*devopsguru.ListOrganizationInsightsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOrganizationInsights", arg0)
	ret0, _ := ret[0].(*devopsguru.ListOrganizationInsightsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOrganizationInsights indicates an expected call of ListOrganizationInsights.
func (mr *MockDevOpsGuruAPIMockRecorder) ListOrganizationInsights(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrganizationInsights", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListOrganizationInsights), arg0)
}

// ListOrganizationInsightsPages mocks base method.
func (m *MockDevOpsGuruAPI) ListOrganizationInsightsPages(arg0 *devopsguru.ListOrganizationInsightsInput, arg1 func(*devopsguru.ListOrganizationInsightsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOrganizationInsightsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListOrganizationInsightsPages indicates an expected call of ListOrganizationInsightsPages.
func (mr *MockDevOpsGuruAPIMockRecorder) ListOrganizationInsightsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrganizationInsightsPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListOrganizationInsightsPages), arg0, arg1)
}

// ListOrganizationInsightsPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListOrganizationInsightsPagesWithContext(arg0 context.Context, arg1 *devopsguru.ListOrganizationInsightsInput, arg2 func(*devopsguru.ListOrganizationInsightsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListOrganizationInsightsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListOrganizationInsightsPagesWithContext indicates an expected call of ListOrganizationInsightsPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListOrganizationInsightsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrganizationInsightsPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListOrganizationInsightsPagesWithContext), varargs...)
}

// ListOrganizationInsightsRequest mocks base method.
func (m *MockDevOpsGuruAPI) ListOrganizationInsightsRequest(arg0 *devopsguru.ListOrganizationInsightsInput) (*request.Request, *devopsguru.ListOrganizationInsightsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOrganizationInsightsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.ListOrganizationInsightsOutput)
	return ret0, ret1
}

// ListOrganizationInsightsRequest indicates an expected call of ListOrganizationInsightsRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) ListOrganizationInsightsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrganizationInsightsRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListOrganizationInsightsRequest), arg0)
}

// ListOrganizationInsightsWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListOrganizationInsightsWithContext(arg0 context.Context, arg1 *devopsguru.ListOrganizationInsightsInput, arg2 ...request.Option) (*devopsguru.ListOrganizationInsightsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListOrganizationInsightsWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.ListOrganizationInsightsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOrganizationInsightsWithContext indicates an expected call of ListOrganizationInsightsWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListOrganizationInsightsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrganizationInsightsWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListOrganizationInsightsWithContext), varargs...)
}

// ListRecommendations mocks base method.
func (m *MockDevOpsGuruAPI) ListRecommendations(arg0 *devopsguru.ListRecommendationsInput) (*devopsguru.ListRecommendationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRecommendations", arg0)
	ret0, _ := ret[0].(*devopsguru.ListRecommendationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRecommendations indicates an expected call of ListRecommendations.
func (mr *MockDevOpsGuruAPIMockRecorder) ListRecommendations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRecommendations", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListRecommendations), arg0)
}

// ListRecommendationsPages mocks base method.
func (m *MockDevOpsGuruAPI) ListRecommendationsPages(arg0 *devopsguru.ListRecommendationsInput, arg1 func(*devopsguru.ListRecommendationsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRecommendationsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListRecommendationsPages indicates an expected call of ListRecommendationsPages.
func (mr *MockDevOpsGuruAPIMockRecorder) ListRecommendationsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRecommendationsPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListRecommendationsPages), arg0, arg1)
}

// ListRecommendationsPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListRecommendationsPagesWithContext(arg0 context.Context, arg1 *devopsguru.ListRecommendationsInput, arg2 func(*devopsguru.ListRecommendationsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListRecommendationsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListRecommendationsPagesWithContext indicates an expected call of ListRecommendationsPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListRecommendationsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRecommendationsPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListRecommendationsPagesWithContext), varargs...)
}

// ListRecommendationsRequest mocks base method.
func (m *MockDevOpsGuruAPI) ListRecommendationsRequest(arg0 *devopsguru.ListRecommendationsInput) (*request.Request, *devopsguru.ListRecommendationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRecommendationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.ListRecommendationsOutput)
	return ret0, ret1
}

// ListRecommendationsRequest indicates an expected call of ListRecommendationsRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) ListRecommendationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRecommendationsRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListRecommendationsRequest), arg0)
}

// ListRecommendationsWithContext mocks base method.
func (m *MockDevOpsGuruAPI) ListRecommendationsWithContext(arg0 context.Context, arg1 *devopsguru.ListRecommendationsInput, arg2 ...request.Option) (*devopsguru.ListRecommendationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListRecommendationsWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.ListRecommendationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRecommendationsWithContext indicates an expected call of ListRecommendationsWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) ListRecommendationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRecommendationsWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).ListRecommendationsWithContext), varargs...)
}

// PutFeedback mocks base method.
func (m *MockDevOpsGuruAPI) PutFeedback(arg0 *devopsguru.PutFeedbackInput) (*devopsguru.PutFeedbackOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutFeedback", arg0)
	ret0, _ := ret[0].(*devopsguru.PutFeedbackOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutFeedback indicates an expected call of PutFeedback.
func (mr *MockDevOpsGuruAPIMockRecorder) PutFeedback(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutFeedback", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).PutFeedback), arg0)
}

// PutFeedbackRequest mocks base method.
func (m *MockDevOpsGuruAPI) PutFeedbackRequest(arg0 *devopsguru.PutFeedbackInput) (*request.Request, *devopsguru.PutFeedbackOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutFeedbackRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.PutFeedbackOutput)
	return ret0, ret1
}

// PutFeedbackRequest indicates an expected call of PutFeedbackRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) PutFeedbackRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutFeedbackRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).PutFeedbackRequest), arg0)
}

// PutFeedbackWithContext mocks base method.
func (m *MockDevOpsGuruAPI) PutFeedbackWithContext(arg0 context.Context, arg1 *devopsguru.PutFeedbackInput, arg2 ...request.Option) (*devopsguru.PutFeedbackOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "PutFeedbackWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.PutFeedbackOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutFeedbackWithContext indicates an expected call of PutFeedbackWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) PutFeedbackWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutFeedbackWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).PutFeedbackWithContext), varargs...)
}

// RemoveNotificationChannel mocks base method.
func (m *MockDevOpsGuruAPI) RemoveNotificationChannel(arg0 *devopsguru.RemoveNotificationChannelInput) (*devopsguru.RemoveNotificationChannelOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveNotificationChannel", arg0)
	ret0, _ := ret[0].(*devopsguru.RemoveNotificationChannelOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RemoveNotificationChannel indicates an expected call of RemoveNotificationChannel.
func (mr *MockDevOpsGuruAPIMockRecorder) RemoveNotificationChannel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveNotificationChannel", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).RemoveNotificationChannel), arg0)
}

// RemoveNotificationChannelRequest mocks base method.
func (m *MockDevOpsGuruAPI) RemoveNotificationChannelRequest(arg0 *devopsguru.RemoveNotificationChannelInput) (*request.Request, *devopsguru.RemoveNotificationChannelOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveNotificationChannelRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.RemoveNotificationChannelOutput)
	return ret0, ret1
}

// RemoveNotificationChannelRequest indicates an expected call of RemoveNotificationChannelRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) RemoveNotificationChannelRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveNotificationChannelRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).RemoveNotificationChannelRequest), arg0)
}

// RemoveNotificationChannelWithContext mocks base method.
func (m *MockDevOpsGuruAPI) RemoveNotificationChannelWithContext(arg0 context.Context, arg1 *devopsguru.RemoveNotificationChannelInput, arg2 ...request.Option) (*devopsguru.RemoveNotificationChannelOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "RemoveNotificationChannelWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.RemoveNotificationChannelOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RemoveNotificationChannelWithContext indicates an expected call of RemoveNotificationChannelWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) RemoveNotificationChannelWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveNotificationChannelWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).RemoveNotificationChannelWithContext), varargs...)
}

// SearchInsights mocks base method.
func (m *MockDevOpsGuruAPI) SearchInsights(arg0 *devopsguru.SearchInsightsInput) (*devopsguru.SearchInsightsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchInsights", arg0)
	ret0, _ := ret[0].(*devopsguru.SearchInsightsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchInsights indicates an expected call of SearchInsights.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchInsights(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchInsights", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchInsights), arg0)
}

// SearchInsightsPages mocks base method.
func (m *MockDevOpsGuruAPI) SearchInsightsPages(arg0 *devopsguru.SearchInsightsInput, arg1 func(*devopsguru.SearchInsightsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchInsightsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SearchInsightsPages indicates an expected call of SearchInsightsPages.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchInsightsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchInsightsPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchInsightsPages), arg0, arg1)
}

// SearchInsightsPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) SearchInsightsPagesWithContext(arg0 context.Context, arg1 *devopsguru.SearchInsightsInput, arg2 func(*devopsguru.SearchInsightsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SearchInsightsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// SearchInsightsPagesWithContext indicates an expected call of SearchInsightsPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchInsightsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchInsightsPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchInsightsPagesWithContext), varargs...)
}

// SearchInsightsRequest mocks base method.
func (m *MockDevOpsGuruAPI) SearchInsightsRequest(arg0 *devopsguru.SearchInsightsInput) (*request.Request, *devopsguru.SearchInsightsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchInsightsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.SearchInsightsOutput)
	return ret0, ret1
}

// SearchInsightsRequest indicates an expected call of SearchInsightsRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchInsightsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchInsightsRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchInsightsRequest), arg0)
}

// SearchInsightsWithContext mocks base method.
func (m *MockDevOpsGuruAPI) SearchInsightsWithContext(arg0 context.Context, arg1 *devopsguru.SearchInsightsInput, arg2 ...request.Option) (*devopsguru.SearchInsightsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SearchInsightsWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.SearchInsightsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchInsightsWithContext indicates an expected call of SearchInsightsWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchInsightsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchInsightsWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchInsightsWithContext), varargs...)
}

// SearchOrganizationInsights mocks base method.
func (m *MockDevOpsGuruAPI) SearchOrganizationInsights(arg0 *devopsguru.SearchOrganizationInsightsInput) (*devopsguru.SearchOrganizationInsightsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchOrganizationInsights", arg0)
	ret0, _ := ret[0].(*devopsguru.SearchOrganizationInsightsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchOrganizationInsights indicates an expected call of SearchOrganizationInsights.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchOrganizationInsights(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchOrganizationInsights", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchOrganizationInsights), arg0)
}

// SearchOrganizationInsightsPages mocks base method.
func (m *MockDevOpsGuruAPI) SearchOrganizationInsightsPages(arg0 *devopsguru.SearchOrganizationInsightsInput, arg1 func(*devopsguru.SearchOrganizationInsightsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchOrganizationInsightsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SearchOrganizationInsightsPages indicates an expected call of SearchOrganizationInsightsPages.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchOrganizationInsightsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchOrganizationInsightsPages", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchOrganizationInsightsPages), arg0, arg1)
}

// SearchOrganizationInsightsPagesWithContext mocks base method.
func (m *MockDevOpsGuruAPI) SearchOrganizationInsightsPagesWithContext(arg0 context.Context, arg1 *devopsguru.SearchOrganizationInsightsInput, arg2 func(*devopsguru.SearchOrganizationInsightsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SearchOrganizationInsightsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// SearchOrganizationInsightsPagesWithContext indicates an expected call of SearchOrganizationInsightsPagesWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchOrganizationInsightsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchOrganizationInsightsPagesWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchOrganizationInsightsPagesWithContext), varargs...)
}

// SearchOrganizationInsightsRequest mocks base method.
func (m *MockDevOpsGuruAPI) SearchOrganizationInsightsRequest(arg0 *devopsguru.SearchOrganizationInsightsInput) (*request.Request, *devopsguru.SearchOrganizationInsightsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchOrganizationInsightsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.SearchOrganizationInsightsOutput)
	return ret0, ret1
}

// SearchOrganizationInsightsRequest indicates an expected call of SearchOrganizationInsightsRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchOrganizationInsightsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchOrganizationInsightsRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchOrganizationInsightsRequest), arg0)
}

// SearchOrganizationInsightsWithContext mocks base method.
func (m *MockDevOpsGuruAPI) SearchOrganizationInsightsWithContext(arg0 context.Context, arg1 *devopsguru.SearchOrganizationInsightsInput, arg2 ...request.Option) (*devopsguru.SearchOrganizationInsightsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SearchOrganizationInsightsWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.SearchOrganizationInsightsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchOrganizationInsightsWithContext indicates an expected call of SearchOrganizationInsightsWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) SearchOrganizationInsightsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchOrganizationInsightsWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).SearchOrganizationInsightsWithContext), varargs...)
}

// StartCostEstimation mocks base method.
func (m *MockDevOpsGuruAPI) StartCostEstimation(arg0 *devopsguru.StartCostEstimationInput) (*devopsguru.StartCostEstimationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartCostEstimation", arg0)
	ret0, _ := ret[0].(*devopsguru.StartCostEstimationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartCostEstimation indicates an expected call of StartCostEstimation.
func (mr *MockDevOpsGuruAPIMockRecorder) StartCostEstimation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartCostEstimation", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).StartCostEstimation), arg0)
}

// StartCostEstimationRequest mocks base method.
func (m *MockDevOpsGuruAPI) StartCostEstimationRequest(arg0 *devopsguru.StartCostEstimationInput) (*request.Request, *devopsguru.StartCostEstimationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartCostEstimationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.StartCostEstimationOutput)
	return ret0, ret1
}

// StartCostEstimationRequest indicates an expected call of StartCostEstimationRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) StartCostEstimationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartCostEstimationRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).StartCostEstimationRequest), arg0)
}

// StartCostEstimationWithContext mocks base method.
func (m *MockDevOpsGuruAPI) StartCostEstimationWithContext(arg0 context.Context, arg1 *devopsguru.StartCostEstimationInput, arg2 ...request.Option) (*devopsguru.StartCostEstimationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StartCostEstimationWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.StartCostEstimationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartCostEstimationWithContext indicates an expected call of StartCostEstimationWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) StartCostEstimationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartCostEstimationWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).StartCostEstimationWithContext), varargs...)
}

// UpdateEventSourcesConfig mocks base method.
func (m *MockDevOpsGuruAPI) UpdateEventSourcesConfig(arg0 *devopsguru.UpdateEventSourcesConfigInput) (*devopsguru.UpdateEventSourcesConfigOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEventSourcesConfig", arg0)
	ret0, _ := ret[0].(*devopsguru.UpdateEventSourcesConfigOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateEventSourcesConfig indicates an expected call of UpdateEventSourcesConfig.
func (mr *MockDevOpsGuruAPIMockRecorder) UpdateEventSourcesConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEventSourcesConfig", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).UpdateEventSourcesConfig), arg0)
}

// UpdateEventSourcesConfigRequest mocks base method.
func (m *MockDevOpsGuruAPI) UpdateEventSourcesConfigRequest(arg0 *devopsguru.UpdateEventSourcesConfigInput) (*request.Request, *devopsguru.UpdateEventSourcesConfigOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEventSourcesConfigRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.UpdateEventSourcesConfigOutput)
	return ret0, ret1
}

// UpdateEventSourcesConfigRequest indicates an expected call of UpdateEventSourcesConfigRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) UpdateEventSourcesConfigRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEventSourcesConfigRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).UpdateEventSourcesConfigRequest), arg0)
}

// UpdateEventSourcesConfigWithContext mocks base method.
func (m *MockDevOpsGuruAPI) UpdateEventSourcesConfigWithContext(arg0 context.Context, arg1 *devopsguru.UpdateEventSourcesConfigInput, arg2 ...request.Option) (*devopsguru.UpdateEventSourcesConfigOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateEventSourcesConfigWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.UpdateEventSourcesConfigOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateEventSourcesConfigWithContext indicates an expected call of UpdateEventSourcesConfigWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) UpdateEventSourcesConfigWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEventSourcesConfigWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).UpdateEventSourcesConfigWithContext), varargs...)
}

// UpdateResourceCollection mocks base method.
func (m *MockDevOpsGuruAPI) UpdateResourceCollection(arg0 *devopsguru.UpdateResourceCollectionInput) (*devopsguru.UpdateResourceCollectionOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateResourceCollection", arg0)
	ret0, _ := ret[0].(*devopsguru.UpdateResourceCollectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateResourceCollection indicates an expected call of UpdateResourceCollection.
func (mr *MockDevOpsGuruAPIMockRecorder) UpdateResourceCollection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateResourceCollection", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).UpdateResourceCollection), arg0)
}

// UpdateResourceCollectionRequest mocks base method.
func (m *MockDevOpsGuruAPI) UpdateResourceCollectionRequest(arg0 *devopsguru.UpdateResourceCollectionInput) (*request.Request, *devopsguru.UpdateResourceCollectionOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateResourceCollectionRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.UpdateResourceCollectionOutput)
	return ret0, ret1
}

// UpdateResourceCollectionRequest indicates an expected call of UpdateResourceCollectionRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) UpdateResourceCollectionRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateResourceCollectionRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).UpdateResourceCollectionRequest), arg0)
}

// UpdateResourceCollectionWithContext mocks base method.
func (m *MockDevOpsGuruAPI) UpdateResourceCollectionWithContext(arg0 context.Context, arg1 *devopsguru.UpdateResourceCollectionInput, arg2 ...request.Option) (*devopsguru.UpdateResourceCollectionOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateResourceCollectionWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.UpdateResourceCollectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateResourceCollectionWithContext indicates an expected call of UpdateResourceCollectionWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) UpdateResourceCollectionWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateResourceCollectionWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).UpdateResourceCollectionWithContext), varargs...)
}

// UpdateServiceIntegration mocks base method.
func (m *MockDevOpsGuruAPI) UpdateServiceIntegration(arg0 *devopsguru.UpdateServiceIntegrationInput) (*devopsguru.UpdateServiceIntegrationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateServiceIntegration", arg0)
	ret0, _ := ret[0].(*devopsguru.UpdateServiceIntegrationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateServiceIntegration indicates an expected call of UpdateServiceIntegration.
func (mr *MockDevOpsGuruAPIMockRecorder) UpdateServiceIntegration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateServiceIntegration", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).UpdateServiceIntegration), arg0)
}

// UpdateServiceIntegrationRequest mocks base method.
func (m *MockDevOpsGuruAPI) UpdateServiceIntegrationRequest(arg0 *devopsguru.UpdateServiceIntegrationInput) (*request.Request, *devopsguru.UpdateServiceIntegrationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateServiceIntegrationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*devopsguru.UpdateServiceIntegrationOutput)
	return ret0, ret1
}

// UpdateServiceIntegrationRequest indicates an expected call of UpdateServiceIntegrationRequest.
func (mr *MockDevOpsGuruAPIMockRecorder) UpdateServiceIntegrationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateServiceIntegrationRequest", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).UpdateServiceIntegrationRequest), arg0)
}

// UpdateServiceIntegrationWithContext mocks base method.
func (m *MockDevOpsGuruAPI) UpdateServiceIntegrationWithContext(arg0 context.Context, arg1 *devopsguru.UpdateServiceIntegrationInput, arg2 ...request.Option) (*devopsguru.UpdateServiceIntegrationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateServiceIntegrationWithContext", varargs...)
	ret0, _ := ret[0].(*devopsguru.UpdateServiceIntegrationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateServiceIntegrationWithContext indicates an expected call of UpdateServiceIntegrationWithContext.
func (mr *MockDevOpsGuruAPIMockRecorder) UpdateServiceIntegrationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateServiceIntegrationWithContext", reflect.TypeOf((*MockDevOpsGuruAPI)(nil).UpdateServiceIntegrationWithContext), varargs...)
}
