// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/applicationdiscoveryservice/applicationdiscoveryserviceiface (interfaces: ApplicationDiscoveryServiceAPI)

// Package applicationdiscoveryservicemock is a generated GoMock package.
package applicationdiscoveryservicemock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	applicationdiscoveryservice "github.com/aws/aws-sdk-go/service/applicationdiscoveryservice"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockApplicationDiscoveryServiceAPI is a mock of ApplicationDiscoveryServiceAPI interface
type MockApplicationDiscoveryServiceAPI struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationDiscoveryServiceAPIMockRecorder
}

// MockApplicationDiscoveryServiceAPIMockRecorder is the mock recorder for MockApplicationDiscoveryServiceAPI
type MockApplicationDiscoveryServiceAPIMockRecorder struct {
	mock *MockApplicationDiscoveryServiceAPI
}

// NewMockApplicationDiscoveryServiceAPI creates a new mock instance
func NewMockApplicationDiscoveryServiceAPI(ctrl *gomock.Controller) *MockApplicationDiscoveryServiceAPI {
	mock := &MockApplicationDiscoveryServiceAPI{ctrl: ctrl}
	mock.recorder = &MockApplicationDiscoveryServiceAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApplicationDiscoveryServiceAPI) EXPECT() *MockApplicationDiscoveryServiceAPIMockRecorder {
	return m.recorder
}

// AssociateConfigurationItemsToApplication mocks base method
func (m *MockApplicationDiscoveryServiceAPI) AssociateConfigurationItemsToApplication(arg0 *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateConfigurationItemsToApplication", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateConfigurationItemsToApplication indicates an expected call of AssociateConfigurationItemsToApplication
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) AssociateConfigurationItemsToApplication(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateConfigurationItemsToApplication", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).AssociateConfigurationItemsToApplication), arg0)
}

// AssociateConfigurationItemsToApplicationRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) AssociateConfigurationItemsToApplicationRequest(arg0 *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) (*request.Request, *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateConfigurationItemsToApplicationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput)
	return ret0, ret1
}

// AssociateConfigurationItemsToApplicationRequest indicates an expected call of AssociateConfigurationItemsToApplicationRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) AssociateConfigurationItemsToApplicationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateConfigurationItemsToApplicationRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).AssociateConfigurationItemsToApplicationRequest), arg0)
}

// AssociateConfigurationItemsToApplicationWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) AssociateConfigurationItemsToApplicationWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput, arg2 ...request.Option) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AssociateConfigurationItemsToApplicationWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateConfigurationItemsToApplicationWithContext indicates an expected call of AssociateConfigurationItemsToApplicationWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) AssociateConfigurationItemsToApplicationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateConfigurationItemsToApplicationWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).AssociateConfigurationItemsToApplicationWithContext), varargs...)
}

// BatchDeleteImportData mocks base method
func (m *MockApplicationDiscoveryServiceAPI) BatchDeleteImportData(arg0 *applicationdiscoveryservice.BatchDeleteImportDataInput) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchDeleteImportData", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.BatchDeleteImportDataOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchDeleteImportData indicates an expected call of BatchDeleteImportData
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) BatchDeleteImportData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchDeleteImportData", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).BatchDeleteImportData), arg0)
}

// BatchDeleteImportDataRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) BatchDeleteImportDataRequest(arg0 *applicationdiscoveryservice.BatchDeleteImportDataInput) (*request.Request, *applicationdiscoveryservice.BatchDeleteImportDataOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchDeleteImportDataRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.BatchDeleteImportDataOutput)
	return ret0, ret1
}

// BatchDeleteImportDataRequest indicates an expected call of BatchDeleteImportDataRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) BatchDeleteImportDataRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchDeleteImportDataRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).BatchDeleteImportDataRequest), arg0)
}

// BatchDeleteImportDataWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) BatchDeleteImportDataWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.BatchDeleteImportDataInput, arg2 ...request.Option) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "BatchDeleteImportDataWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.BatchDeleteImportDataOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchDeleteImportDataWithContext indicates an expected call of BatchDeleteImportDataWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) BatchDeleteImportDataWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchDeleteImportDataWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).BatchDeleteImportDataWithContext), varargs...)
}

// CreateApplication mocks base method
func (m *MockApplicationDiscoveryServiceAPI) CreateApplication(arg0 *applicationdiscoveryservice.CreateApplicationInput) (*applicationdiscoveryservice.CreateApplicationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateApplication", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.CreateApplicationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateApplication indicates an expected call of CreateApplication
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) CreateApplication(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateApplication", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).CreateApplication), arg0)
}

// CreateApplicationRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) CreateApplicationRequest(arg0 *applicationdiscoveryservice.CreateApplicationInput) (*request.Request, *applicationdiscoveryservice.CreateApplicationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateApplicationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.CreateApplicationOutput)
	return ret0, ret1
}

// CreateApplicationRequest indicates an expected call of CreateApplicationRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) CreateApplicationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateApplicationRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).CreateApplicationRequest), arg0)
}

// CreateApplicationWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) CreateApplicationWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.CreateApplicationInput, arg2 ...request.Option) (*applicationdiscoveryservice.CreateApplicationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateApplicationWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.CreateApplicationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateApplicationWithContext indicates an expected call of CreateApplicationWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) CreateApplicationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateApplicationWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).CreateApplicationWithContext), varargs...)
}

// CreateTags mocks base method
func (m *MockApplicationDiscoveryServiceAPI) CreateTags(arg0 *applicationdiscoveryservice.CreateTagsInput) (*applicationdiscoveryservice.CreateTagsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTags", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.CreateTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTags indicates an expected call of CreateTags
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) CreateTags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTags", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).CreateTags), arg0)
}

// CreateTagsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) CreateTagsRequest(arg0 *applicationdiscoveryservice.CreateTagsInput) (*request.Request, *applicationdiscoveryservice.CreateTagsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTagsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.CreateTagsOutput)
	return ret0, ret1
}

// CreateTagsRequest indicates an expected call of CreateTagsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) CreateTagsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTagsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).CreateTagsRequest), arg0)
}

// CreateTagsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) CreateTagsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.CreateTagsInput, arg2 ...request.Option) (*applicationdiscoveryservice.CreateTagsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateTagsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.CreateTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTagsWithContext indicates an expected call of CreateTagsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) CreateTagsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTagsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).CreateTagsWithContext), varargs...)
}

// DeleteApplications mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DeleteApplications(arg0 *applicationdiscoveryservice.DeleteApplicationsInput) (*applicationdiscoveryservice.DeleteApplicationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteApplications", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DeleteApplicationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteApplications indicates an expected call of DeleteApplications
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DeleteApplications(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteApplications", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DeleteApplications), arg0)
}

// DeleteApplicationsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DeleteApplicationsRequest(arg0 *applicationdiscoveryservice.DeleteApplicationsInput) (*request.Request, *applicationdiscoveryservice.DeleteApplicationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteApplicationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DeleteApplicationsOutput)
	return ret0, ret1
}

// DeleteApplicationsRequest indicates an expected call of DeleteApplicationsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DeleteApplicationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteApplicationsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DeleteApplicationsRequest), arg0)
}

// DeleteApplicationsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DeleteApplicationsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DeleteApplicationsInput, arg2 ...request.Option) (*applicationdiscoveryservice.DeleteApplicationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteApplicationsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DeleteApplicationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteApplicationsWithContext indicates an expected call of DeleteApplicationsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DeleteApplicationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteApplicationsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DeleteApplicationsWithContext), varargs...)
}

// DeleteTags mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DeleteTags(arg0 *applicationdiscoveryservice.DeleteTagsInput) (*applicationdiscoveryservice.DeleteTagsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTags", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DeleteTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTags indicates an expected call of DeleteTags
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DeleteTags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTags", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DeleteTags), arg0)
}

// DeleteTagsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DeleteTagsRequest(arg0 *applicationdiscoveryservice.DeleteTagsInput) (*request.Request, *applicationdiscoveryservice.DeleteTagsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTagsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DeleteTagsOutput)
	return ret0, ret1
}

// DeleteTagsRequest indicates an expected call of DeleteTagsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DeleteTagsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTagsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DeleteTagsRequest), arg0)
}

// DeleteTagsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DeleteTagsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DeleteTagsInput, arg2 ...request.Option) (*applicationdiscoveryservice.DeleteTagsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteTagsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DeleteTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTagsWithContext indicates an expected call of DeleteTagsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DeleteTagsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTagsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DeleteTagsWithContext), varargs...)
}

// DescribeAgents mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeAgents(arg0 *applicationdiscoveryservice.DescribeAgentsInput) (*applicationdiscoveryservice.DescribeAgentsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAgents", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeAgentsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAgents indicates an expected call of DescribeAgents
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeAgents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAgents", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeAgents), arg0)
}

// DescribeAgentsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeAgentsRequest(arg0 *applicationdiscoveryservice.DescribeAgentsInput) (*request.Request, *applicationdiscoveryservice.DescribeAgentsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAgentsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DescribeAgentsOutput)
	return ret0, ret1
}

// DescribeAgentsRequest indicates an expected call of DescribeAgentsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeAgentsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAgentsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeAgentsRequest), arg0)
}

// DescribeAgentsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeAgentsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DescribeAgentsInput, arg2 ...request.Option) (*applicationdiscoveryservice.DescribeAgentsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeAgentsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeAgentsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAgentsWithContext indicates an expected call of DescribeAgentsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeAgentsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAgentsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeAgentsWithContext), varargs...)
}

// DescribeConfigurations mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeConfigurations(arg0 *applicationdiscoveryservice.DescribeConfigurationsInput) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeConfigurations", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeConfigurations indicates an expected call of DescribeConfigurations
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeConfigurations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeConfigurations", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeConfigurations), arg0)
}

// DescribeConfigurationsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeConfigurationsRequest(arg0 *applicationdiscoveryservice.DescribeConfigurationsInput) (*request.Request, *applicationdiscoveryservice.DescribeConfigurationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeConfigurationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DescribeConfigurationsOutput)
	return ret0, ret1
}

// DescribeConfigurationsRequest indicates an expected call of DescribeConfigurationsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeConfigurationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeConfigurationsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeConfigurationsRequest), arg0)
}

// DescribeConfigurationsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeConfigurationsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DescribeConfigurationsInput, arg2 ...request.Option) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeConfigurationsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeConfigurationsWithContext indicates an expected call of DescribeConfigurationsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeConfigurationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeConfigurationsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeConfigurationsWithContext), varargs...)
}

// DescribeContinuousExports mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeContinuousExports(arg0 *applicationdiscoveryservice.DescribeContinuousExportsInput) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeContinuousExports", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeContinuousExportsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeContinuousExports indicates an expected call of DescribeContinuousExports
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeContinuousExports(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeContinuousExports", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeContinuousExports), arg0)
}

// DescribeContinuousExportsPages mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeContinuousExportsPages(arg0 *applicationdiscoveryservice.DescribeContinuousExportsInput, arg1 func(*applicationdiscoveryservice.DescribeContinuousExportsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeContinuousExportsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeContinuousExportsPages indicates an expected call of DescribeContinuousExportsPages
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeContinuousExportsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeContinuousExportsPages", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeContinuousExportsPages), arg0, arg1)
}

// DescribeContinuousExportsPagesWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeContinuousExportsPagesWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DescribeContinuousExportsInput, arg2 func(*applicationdiscoveryservice.DescribeContinuousExportsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeContinuousExportsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeContinuousExportsPagesWithContext indicates an expected call of DescribeContinuousExportsPagesWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeContinuousExportsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeContinuousExportsPagesWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeContinuousExportsPagesWithContext), varargs...)
}

// DescribeContinuousExportsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeContinuousExportsRequest(arg0 *applicationdiscoveryservice.DescribeContinuousExportsInput) (*request.Request, *applicationdiscoveryservice.DescribeContinuousExportsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeContinuousExportsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DescribeContinuousExportsOutput)
	return ret0, ret1
}

// DescribeContinuousExportsRequest indicates an expected call of DescribeContinuousExportsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeContinuousExportsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeContinuousExportsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeContinuousExportsRequest), arg0)
}

// DescribeContinuousExportsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeContinuousExportsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DescribeContinuousExportsInput, arg2 ...request.Option) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeContinuousExportsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeContinuousExportsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeContinuousExportsWithContext indicates an expected call of DescribeContinuousExportsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeContinuousExportsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeContinuousExportsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeContinuousExportsWithContext), varargs...)
}

// DescribeExportConfigurations mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeExportConfigurations(arg0 *applicationdiscoveryservice.DescribeExportConfigurationsInput) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeExportConfigurations", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeExportConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeExportConfigurations indicates an expected call of DescribeExportConfigurations
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeExportConfigurations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeExportConfigurations", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeExportConfigurations), arg0)
}

// DescribeExportConfigurationsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeExportConfigurationsRequest(arg0 *applicationdiscoveryservice.DescribeExportConfigurationsInput) (*request.Request, *applicationdiscoveryservice.DescribeExportConfigurationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeExportConfigurationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DescribeExportConfigurationsOutput)
	return ret0, ret1
}

// DescribeExportConfigurationsRequest indicates an expected call of DescribeExportConfigurationsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeExportConfigurationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeExportConfigurationsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeExportConfigurationsRequest), arg0)
}

// DescribeExportConfigurationsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeExportConfigurationsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DescribeExportConfigurationsInput, arg2 ...request.Option) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeExportConfigurationsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeExportConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeExportConfigurationsWithContext indicates an expected call of DescribeExportConfigurationsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeExportConfigurationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeExportConfigurationsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeExportConfigurationsWithContext), varargs...)
}

// DescribeExportTasks mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeExportTasks(arg0 *applicationdiscoveryservice.DescribeExportTasksInput) (*applicationdiscoveryservice.DescribeExportTasksOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeExportTasks", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeExportTasksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeExportTasks indicates an expected call of DescribeExportTasks
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeExportTasks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeExportTasks", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeExportTasks), arg0)
}

// DescribeExportTasksRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeExportTasksRequest(arg0 *applicationdiscoveryservice.DescribeExportTasksInput) (*request.Request, *applicationdiscoveryservice.DescribeExportTasksOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeExportTasksRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DescribeExportTasksOutput)
	return ret0, ret1
}

// DescribeExportTasksRequest indicates an expected call of DescribeExportTasksRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeExportTasksRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeExportTasksRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeExportTasksRequest), arg0)
}

// DescribeExportTasksWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeExportTasksWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DescribeExportTasksInput, arg2 ...request.Option) (*applicationdiscoveryservice.DescribeExportTasksOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeExportTasksWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeExportTasksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeExportTasksWithContext indicates an expected call of DescribeExportTasksWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeExportTasksWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeExportTasksWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeExportTasksWithContext), varargs...)
}

// DescribeImportTasks mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeImportTasks(arg0 *applicationdiscoveryservice.DescribeImportTasksInput) (*applicationdiscoveryservice.DescribeImportTasksOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImportTasks", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeImportTasksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImportTasks indicates an expected call of DescribeImportTasks
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeImportTasks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImportTasks", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeImportTasks), arg0)
}

// DescribeImportTasksPages mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeImportTasksPages(arg0 *applicationdiscoveryservice.DescribeImportTasksInput, arg1 func(*applicationdiscoveryservice.DescribeImportTasksOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImportTasksPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeImportTasksPages indicates an expected call of DescribeImportTasksPages
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeImportTasksPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImportTasksPages", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeImportTasksPages), arg0, arg1)
}

// DescribeImportTasksPagesWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeImportTasksPagesWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DescribeImportTasksInput, arg2 func(*applicationdiscoveryservice.DescribeImportTasksOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeImportTasksPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeImportTasksPagesWithContext indicates an expected call of DescribeImportTasksPagesWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeImportTasksPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImportTasksPagesWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeImportTasksPagesWithContext), varargs...)
}

// DescribeImportTasksRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeImportTasksRequest(arg0 *applicationdiscoveryservice.DescribeImportTasksInput) (*request.Request, *applicationdiscoveryservice.DescribeImportTasksOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImportTasksRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DescribeImportTasksOutput)
	return ret0, ret1
}

// DescribeImportTasksRequest indicates an expected call of DescribeImportTasksRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeImportTasksRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImportTasksRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeImportTasksRequest), arg0)
}

// DescribeImportTasksWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeImportTasksWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DescribeImportTasksInput, arg2 ...request.Option) (*applicationdiscoveryservice.DescribeImportTasksOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeImportTasksWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeImportTasksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImportTasksWithContext indicates an expected call of DescribeImportTasksWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeImportTasksWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImportTasksWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeImportTasksWithContext), varargs...)
}

// DescribeTags mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeTags(arg0 *applicationdiscoveryservice.DescribeTagsInput) (*applicationdiscoveryservice.DescribeTagsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTags", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeTags indicates an expected call of DescribeTags
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeTags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTags", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeTags), arg0)
}

// DescribeTagsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeTagsRequest(arg0 *applicationdiscoveryservice.DescribeTagsInput) (*request.Request, *applicationdiscoveryservice.DescribeTagsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTagsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DescribeTagsOutput)
	return ret0, ret1
}

// DescribeTagsRequest indicates an expected call of DescribeTagsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeTagsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTagsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeTagsRequest), arg0)
}

// DescribeTagsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DescribeTagsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DescribeTagsInput, arg2 ...request.Option) (*applicationdiscoveryservice.DescribeTagsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeTagsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DescribeTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeTagsWithContext indicates an expected call of DescribeTagsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DescribeTagsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTagsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DescribeTagsWithContext), varargs...)
}

// DisassociateConfigurationItemsFromApplication mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DisassociateConfigurationItemsFromApplication(arg0 *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateConfigurationItemsFromApplication", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateConfigurationItemsFromApplication indicates an expected call of DisassociateConfigurationItemsFromApplication
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DisassociateConfigurationItemsFromApplication(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateConfigurationItemsFromApplication", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DisassociateConfigurationItemsFromApplication), arg0)
}

// DisassociateConfigurationItemsFromApplicationRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DisassociateConfigurationItemsFromApplicationRequest(arg0 *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) (*request.Request, *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateConfigurationItemsFromApplicationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput)
	return ret0, ret1
}

// DisassociateConfigurationItemsFromApplicationRequest indicates an expected call of DisassociateConfigurationItemsFromApplicationRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DisassociateConfigurationItemsFromApplicationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateConfigurationItemsFromApplicationRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DisassociateConfigurationItemsFromApplicationRequest), arg0)
}

// DisassociateConfigurationItemsFromApplicationWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) DisassociateConfigurationItemsFromApplicationWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput, arg2 ...request.Option) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DisassociateConfigurationItemsFromApplicationWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateConfigurationItemsFromApplicationWithContext indicates an expected call of DisassociateConfigurationItemsFromApplicationWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) DisassociateConfigurationItemsFromApplicationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateConfigurationItemsFromApplicationWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).DisassociateConfigurationItemsFromApplicationWithContext), varargs...)
}

// ExportConfigurations mocks base method
func (m *MockApplicationDiscoveryServiceAPI) ExportConfigurations(arg0 *applicationdiscoveryservice.ExportConfigurationsInput) (*applicationdiscoveryservice.ExportConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportConfigurations", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.ExportConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportConfigurations indicates an expected call of ExportConfigurations
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) ExportConfigurations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportConfigurations", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).ExportConfigurations), arg0)
}

// ExportConfigurationsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) ExportConfigurationsRequest(arg0 *applicationdiscoveryservice.ExportConfigurationsInput) (*request.Request, *applicationdiscoveryservice.ExportConfigurationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportConfigurationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.ExportConfigurationsOutput)
	return ret0, ret1
}

// ExportConfigurationsRequest indicates an expected call of ExportConfigurationsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) ExportConfigurationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportConfigurationsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).ExportConfigurationsRequest), arg0)
}

// ExportConfigurationsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) ExportConfigurationsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.ExportConfigurationsInput, arg2 ...request.Option) (*applicationdiscoveryservice.ExportConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ExportConfigurationsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.ExportConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportConfigurationsWithContext indicates an expected call of ExportConfigurationsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) ExportConfigurationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportConfigurationsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).ExportConfigurationsWithContext), varargs...)
}

// GetDiscoverySummary mocks base method
func (m *MockApplicationDiscoveryServiceAPI) GetDiscoverySummary(arg0 *applicationdiscoveryservice.GetDiscoverySummaryInput) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiscoverySummary", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.GetDiscoverySummaryOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiscoverySummary indicates an expected call of GetDiscoverySummary
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) GetDiscoverySummary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiscoverySummary", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).GetDiscoverySummary), arg0)
}

// GetDiscoverySummaryRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) GetDiscoverySummaryRequest(arg0 *applicationdiscoveryservice.GetDiscoverySummaryInput) (*request.Request, *applicationdiscoveryservice.GetDiscoverySummaryOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiscoverySummaryRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.GetDiscoverySummaryOutput)
	return ret0, ret1
}

// GetDiscoverySummaryRequest indicates an expected call of GetDiscoverySummaryRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) GetDiscoverySummaryRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiscoverySummaryRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).GetDiscoverySummaryRequest), arg0)
}

// GetDiscoverySummaryWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) GetDiscoverySummaryWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.GetDiscoverySummaryInput, arg2 ...request.Option) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDiscoverySummaryWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.GetDiscoverySummaryOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiscoverySummaryWithContext indicates an expected call of GetDiscoverySummaryWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) GetDiscoverySummaryWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiscoverySummaryWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).GetDiscoverySummaryWithContext), varargs...)
}

// ListConfigurations mocks base method
func (m *MockApplicationDiscoveryServiceAPI) ListConfigurations(arg0 *applicationdiscoveryservice.ListConfigurationsInput) (*applicationdiscoveryservice.ListConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListConfigurations", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.ListConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListConfigurations indicates an expected call of ListConfigurations
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) ListConfigurations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConfigurations", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).ListConfigurations), arg0)
}

// ListConfigurationsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) ListConfigurationsRequest(arg0 *applicationdiscoveryservice.ListConfigurationsInput) (*request.Request, *applicationdiscoveryservice.ListConfigurationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListConfigurationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.ListConfigurationsOutput)
	return ret0, ret1
}

// ListConfigurationsRequest indicates an expected call of ListConfigurationsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) ListConfigurationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConfigurationsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).ListConfigurationsRequest), arg0)
}

// ListConfigurationsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) ListConfigurationsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.ListConfigurationsInput, arg2 ...request.Option) (*applicationdiscoveryservice.ListConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListConfigurationsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.ListConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListConfigurationsWithContext indicates an expected call of ListConfigurationsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) ListConfigurationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConfigurationsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).ListConfigurationsWithContext), varargs...)
}

// ListServerNeighbors mocks base method
func (m *MockApplicationDiscoveryServiceAPI) ListServerNeighbors(arg0 *applicationdiscoveryservice.ListServerNeighborsInput) (*applicationdiscoveryservice.ListServerNeighborsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServerNeighbors", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.ListServerNeighborsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServerNeighbors indicates an expected call of ListServerNeighbors
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) ListServerNeighbors(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServerNeighbors", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).ListServerNeighbors), arg0)
}

// ListServerNeighborsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) ListServerNeighborsRequest(arg0 *applicationdiscoveryservice.ListServerNeighborsInput) (*request.Request, *applicationdiscoveryservice.ListServerNeighborsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServerNeighborsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.ListServerNeighborsOutput)
	return ret0, ret1
}

// ListServerNeighborsRequest indicates an expected call of ListServerNeighborsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) ListServerNeighborsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServerNeighborsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).ListServerNeighborsRequest), arg0)
}

// ListServerNeighborsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) ListServerNeighborsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.ListServerNeighborsInput, arg2 ...request.Option) (*applicationdiscoveryservice.ListServerNeighborsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListServerNeighborsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.ListServerNeighborsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServerNeighborsWithContext indicates an expected call of ListServerNeighborsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) ListServerNeighborsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServerNeighborsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).ListServerNeighborsWithContext), varargs...)
}

// StartContinuousExport mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartContinuousExport(arg0 *applicationdiscoveryservice.StartContinuousExportInput) (*applicationdiscoveryservice.StartContinuousExportOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartContinuousExport", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StartContinuousExportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartContinuousExport indicates an expected call of StartContinuousExport
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartContinuousExport(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartContinuousExport", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartContinuousExport), arg0)
}

// StartContinuousExportRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartContinuousExportRequest(arg0 *applicationdiscoveryservice.StartContinuousExportInput) (*request.Request, *applicationdiscoveryservice.StartContinuousExportOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartContinuousExportRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.StartContinuousExportOutput)
	return ret0, ret1
}

// StartContinuousExportRequest indicates an expected call of StartContinuousExportRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartContinuousExportRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartContinuousExportRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartContinuousExportRequest), arg0)
}

// StartContinuousExportWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartContinuousExportWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.StartContinuousExportInput, arg2 ...request.Option) (*applicationdiscoveryservice.StartContinuousExportOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StartContinuousExportWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StartContinuousExportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartContinuousExportWithContext indicates an expected call of StartContinuousExportWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartContinuousExportWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartContinuousExportWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartContinuousExportWithContext), varargs...)
}

// StartDataCollectionByAgentIds mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartDataCollectionByAgentIds(arg0 *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartDataCollectionByAgentIds", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartDataCollectionByAgentIds indicates an expected call of StartDataCollectionByAgentIds
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartDataCollectionByAgentIds(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartDataCollectionByAgentIds", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartDataCollectionByAgentIds), arg0)
}

// StartDataCollectionByAgentIdsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartDataCollectionByAgentIdsRequest(arg0 *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) (*request.Request, *applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartDataCollectionByAgentIdsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput)
	return ret0, ret1
}

// StartDataCollectionByAgentIdsRequest indicates an expected call of StartDataCollectionByAgentIdsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartDataCollectionByAgentIdsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartDataCollectionByAgentIdsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartDataCollectionByAgentIdsRequest), arg0)
}

// StartDataCollectionByAgentIdsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartDataCollectionByAgentIdsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput, arg2 ...request.Option) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StartDataCollectionByAgentIdsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartDataCollectionByAgentIdsWithContext indicates an expected call of StartDataCollectionByAgentIdsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartDataCollectionByAgentIdsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartDataCollectionByAgentIdsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartDataCollectionByAgentIdsWithContext), varargs...)
}

// StartExportTask mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartExportTask(arg0 *applicationdiscoveryservice.StartExportTaskInput) (*applicationdiscoveryservice.StartExportTaskOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartExportTask", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StartExportTaskOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartExportTask indicates an expected call of StartExportTask
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartExportTask(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartExportTask", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartExportTask), arg0)
}

// StartExportTaskRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartExportTaskRequest(arg0 *applicationdiscoveryservice.StartExportTaskInput) (*request.Request, *applicationdiscoveryservice.StartExportTaskOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartExportTaskRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.StartExportTaskOutput)
	return ret0, ret1
}

// StartExportTaskRequest indicates an expected call of StartExportTaskRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartExportTaskRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartExportTaskRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartExportTaskRequest), arg0)
}

// StartExportTaskWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartExportTaskWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.StartExportTaskInput, arg2 ...request.Option) (*applicationdiscoveryservice.StartExportTaskOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StartExportTaskWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StartExportTaskOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartExportTaskWithContext indicates an expected call of StartExportTaskWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartExportTaskWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartExportTaskWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartExportTaskWithContext), varargs...)
}

// StartImportTask mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartImportTask(arg0 *applicationdiscoveryservice.StartImportTaskInput) (*applicationdiscoveryservice.StartImportTaskOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartImportTask", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StartImportTaskOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartImportTask indicates an expected call of StartImportTask
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartImportTask(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartImportTask", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartImportTask), arg0)
}

// StartImportTaskRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartImportTaskRequest(arg0 *applicationdiscoveryservice.StartImportTaskInput) (*request.Request, *applicationdiscoveryservice.StartImportTaskOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartImportTaskRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.StartImportTaskOutput)
	return ret0, ret1
}

// StartImportTaskRequest indicates an expected call of StartImportTaskRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartImportTaskRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartImportTaskRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartImportTaskRequest), arg0)
}

// StartImportTaskWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StartImportTaskWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.StartImportTaskInput, arg2 ...request.Option) (*applicationdiscoveryservice.StartImportTaskOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StartImportTaskWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StartImportTaskOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartImportTaskWithContext indicates an expected call of StartImportTaskWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StartImportTaskWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartImportTaskWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StartImportTaskWithContext), varargs...)
}

// StopContinuousExport mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StopContinuousExport(arg0 *applicationdiscoveryservice.StopContinuousExportInput) (*applicationdiscoveryservice.StopContinuousExportOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StopContinuousExport", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StopContinuousExportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StopContinuousExport indicates an expected call of StopContinuousExport
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StopContinuousExport(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopContinuousExport", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StopContinuousExport), arg0)
}

// StopContinuousExportRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StopContinuousExportRequest(arg0 *applicationdiscoveryservice.StopContinuousExportInput) (*request.Request, *applicationdiscoveryservice.StopContinuousExportOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StopContinuousExportRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.StopContinuousExportOutput)
	return ret0, ret1
}

// StopContinuousExportRequest indicates an expected call of StopContinuousExportRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StopContinuousExportRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopContinuousExportRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StopContinuousExportRequest), arg0)
}

// StopContinuousExportWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StopContinuousExportWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.StopContinuousExportInput, arg2 ...request.Option) (*applicationdiscoveryservice.StopContinuousExportOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StopContinuousExportWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StopContinuousExportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StopContinuousExportWithContext indicates an expected call of StopContinuousExportWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StopContinuousExportWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopContinuousExportWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StopContinuousExportWithContext), varargs...)
}

// StopDataCollectionByAgentIds mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StopDataCollectionByAgentIds(arg0 *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StopDataCollectionByAgentIds", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StopDataCollectionByAgentIds indicates an expected call of StopDataCollectionByAgentIds
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StopDataCollectionByAgentIds(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopDataCollectionByAgentIds", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StopDataCollectionByAgentIds), arg0)
}

// StopDataCollectionByAgentIdsRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StopDataCollectionByAgentIdsRequest(arg0 *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) (*request.Request, *applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StopDataCollectionByAgentIdsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput)
	return ret0, ret1
}

// StopDataCollectionByAgentIdsRequest indicates an expected call of StopDataCollectionByAgentIdsRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StopDataCollectionByAgentIdsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopDataCollectionByAgentIdsRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StopDataCollectionByAgentIdsRequest), arg0)
}

// StopDataCollectionByAgentIdsWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) StopDataCollectionByAgentIdsWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput, arg2 ...request.Option) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StopDataCollectionByAgentIdsWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StopDataCollectionByAgentIdsWithContext indicates an expected call of StopDataCollectionByAgentIdsWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) StopDataCollectionByAgentIdsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopDataCollectionByAgentIdsWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).StopDataCollectionByAgentIdsWithContext), varargs...)
}

// UpdateApplication mocks base method
func (m *MockApplicationDiscoveryServiceAPI) UpdateApplication(arg0 *applicationdiscoveryservice.UpdateApplicationInput) (*applicationdiscoveryservice.UpdateApplicationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateApplication", arg0)
	ret0, _ := ret[0].(*applicationdiscoveryservice.UpdateApplicationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateApplication indicates an expected call of UpdateApplication
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) UpdateApplication(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateApplication", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).UpdateApplication), arg0)
}

// UpdateApplicationRequest mocks base method
func (m *MockApplicationDiscoveryServiceAPI) UpdateApplicationRequest(arg0 *applicationdiscoveryservice.UpdateApplicationInput) (*request.Request, *applicationdiscoveryservice.UpdateApplicationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateApplicationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*applicationdiscoveryservice.UpdateApplicationOutput)
	return ret0, ret1
}

// UpdateApplicationRequest indicates an expected call of UpdateApplicationRequest
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) UpdateApplicationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateApplicationRequest", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).UpdateApplicationRequest), arg0)
}

// UpdateApplicationWithContext mocks base method
func (m *MockApplicationDiscoveryServiceAPI) UpdateApplicationWithContext(arg0 context.Context, arg1 *applicationdiscoveryservice.UpdateApplicationInput, arg2 ...request.Option) (*applicationdiscoveryservice.UpdateApplicationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateApplicationWithContext", varargs...)
	ret0, _ := ret[0].(*applicationdiscoveryservice.UpdateApplicationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateApplicationWithContext indicates an expected call of UpdateApplicationWithContext
func (mr *MockApplicationDiscoveryServiceAPIMockRecorder) UpdateApplicationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateApplicationWithContext", reflect.TypeOf((*MockApplicationDiscoveryServiceAPI)(nil).UpdateApplicationWithContext), varargs...)
}
