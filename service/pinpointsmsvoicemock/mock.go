// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/pinpointsmsvoice/pinpointsmsvoiceiface (interfaces: PinpointSMSVoiceAPI)

// Package pinpointsmsvoicemock is a generated GoMock package.
package pinpointsmsvoicemock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	pinpointsmsvoice "github.com/aws/aws-sdk-go/service/pinpointsmsvoice"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPinpointSMSVoiceAPI is a mock of PinpointSMSVoiceAPI interface
type MockPinpointSMSVoiceAPI struct {
	ctrl     *gomock.Controller
	recorder *MockPinpointSMSVoiceAPIMockRecorder
}

// MockPinpointSMSVoiceAPIMockRecorder is the mock recorder for MockPinpointSMSVoiceAPI
type MockPinpointSMSVoiceAPIMockRecorder struct {
	mock *MockPinpointSMSVoiceAPI
}

// NewMockPinpointSMSVoiceAPI creates a new mock instance
func NewMockPinpointSMSVoiceAPI(ctrl *gomock.Controller) *MockPinpointSMSVoiceAPI {
	mock := &MockPinpointSMSVoiceAPI{ctrl: ctrl}
	mock.recorder = &MockPinpointSMSVoiceAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPinpointSMSVoiceAPI) EXPECT() *MockPinpointSMSVoiceAPIMockRecorder {
	return m.recorder
}

// CreateConfigurationSet mocks base method
func (m *MockPinpointSMSVoiceAPI) CreateConfigurationSet(arg0 *pinpointsmsvoice.CreateConfigurationSetInput) (*pinpointsmsvoice.CreateConfigurationSetOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConfigurationSet", arg0)
	ret0, _ := ret[0].(*pinpointsmsvoice.CreateConfigurationSetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConfigurationSet indicates an expected call of CreateConfigurationSet
func (mr *MockPinpointSMSVoiceAPIMockRecorder) CreateConfigurationSet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfigurationSet", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).CreateConfigurationSet), arg0)
}

// CreateConfigurationSetEventDestination mocks base method
func (m *MockPinpointSMSVoiceAPI) CreateConfigurationSetEventDestination(arg0 *pinpointsmsvoice.CreateConfigurationSetEventDestinationInput) (*pinpointsmsvoice.CreateConfigurationSetEventDestinationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConfigurationSetEventDestination", arg0)
	ret0, _ := ret[0].(*pinpointsmsvoice.CreateConfigurationSetEventDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConfigurationSetEventDestination indicates an expected call of CreateConfigurationSetEventDestination
func (mr *MockPinpointSMSVoiceAPIMockRecorder) CreateConfigurationSetEventDestination(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfigurationSetEventDestination", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).CreateConfigurationSetEventDestination), arg0)
}

// CreateConfigurationSetEventDestinationRequest mocks base method
func (m *MockPinpointSMSVoiceAPI) CreateConfigurationSetEventDestinationRequest(arg0 *pinpointsmsvoice.CreateConfigurationSetEventDestinationInput) (*request.Request, *pinpointsmsvoice.CreateConfigurationSetEventDestinationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConfigurationSetEventDestinationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pinpointsmsvoice.CreateConfigurationSetEventDestinationOutput)
	return ret0, ret1
}

// CreateConfigurationSetEventDestinationRequest indicates an expected call of CreateConfigurationSetEventDestinationRequest
func (mr *MockPinpointSMSVoiceAPIMockRecorder) CreateConfigurationSetEventDestinationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfigurationSetEventDestinationRequest", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).CreateConfigurationSetEventDestinationRequest), arg0)
}

// CreateConfigurationSetEventDestinationWithContext mocks base method
func (m *MockPinpointSMSVoiceAPI) CreateConfigurationSetEventDestinationWithContext(arg0 context.Context, arg1 *pinpointsmsvoice.CreateConfigurationSetEventDestinationInput, arg2 ...request.Option) (*pinpointsmsvoice.CreateConfigurationSetEventDestinationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateConfigurationSetEventDestinationWithContext", varargs...)
	ret0, _ := ret[0].(*pinpointsmsvoice.CreateConfigurationSetEventDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConfigurationSetEventDestinationWithContext indicates an expected call of CreateConfigurationSetEventDestinationWithContext
func (mr *MockPinpointSMSVoiceAPIMockRecorder) CreateConfigurationSetEventDestinationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfigurationSetEventDestinationWithContext", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).CreateConfigurationSetEventDestinationWithContext), varargs...)
}

// CreateConfigurationSetRequest mocks base method
func (m *MockPinpointSMSVoiceAPI) CreateConfigurationSetRequest(arg0 *pinpointsmsvoice.CreateConfigurationSetInput) (*request.Request, *pinpointsmsvoice.CreateConfigurationSetOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConfigurationSetRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pinpointsmsvoice.CreateConfigurationSetOutput)
	return ret0, ret1
}

// CreateConfigurationSetRequest indicates an expected call of CreateConfigurationSetRequest
func (mr *MockPinpointSMSVoiceAPIMockRecorder) CreateConfigurationSetRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfigurationSetRequest", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).CreateConfigurationSetRequest), arg0)
}

// CreateConfigurationSetWithContext mocks base method
func (m *MockPinpointSMSVoiceAPI) CreateConfigurationSetWithContext(arg0 context.Context, arg1 *pinpointsmsvoice.CreateConfigurationSetInput, arg2 ...request.Option) (*pinpointsmsvoice.CreateConfigurationSetOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateConfigurationSetWithContext", varargs...)
	ret0, _ := ret[0].(*pinpointsmsvoice.CreateConfigurationSetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConfigurationSetWithContext indicates an expected call of CreateConfigurationSetWithContext
func (mr *MockPinpointSMSVoiceAPIMockRecorder) CreateConfigurationSetWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfigurationSetWithContext", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).CreateConfigurationSetWithContext), varargs...)
}

// DeleteConfigurationSet mocks base method
func (m *MockPinpointSMSVoiceAPI) DeleteConfigurationSet(arg0 *pinpointsmsvoice.DeleteConfigurationSetInput) (*pinpointsmsvoice.DeleteConfigurationSetOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteConfigurationSet", arg0)
	ret0, _ := ret[0].(*pinpointsmsvoice.DeleteConfigurationSetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteConfigurationSet indicates an expected call of DeleteConfigurationSet
func (mr *MockPinpointSMSVoiceAPIMockRecorder) DeleteConfigurationSet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConfigurationSet", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).DeleteConfigurationSet), arg0)
}

// DeleteConfigurationSetEventDestination mocks base method
func (m *MockPinpointSMSVoiceAPI) DeleteConfigurationSetEventDestination(arg0 *pinpointsmsvoice.DeleteConfigurationSetEventDestinationInput) (*pinpointsmsvoice.DeleteConfigurationSetEventDestinationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteConfigurationSetEventDestination", arg0)
	ret0, _ := ret[0].(*pinpointsmsvoice.DeleteConfigurationSetEventDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteConfigurationSetEventDestination indicates an expected call of DeleteConfigurationSetEventDestination
func (mr *MockPinpointSMSVoiceAPIMockRecorder) DeleteConfigurationSetEventDestination(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConfigurationSetEventDestination", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).DeleteConfigurationSetEventDestination), arg0)
}

// DeleteConfigurationSetEventDestinationRequest mocks base method
func (m *MockPinpointSMSVoiceAPI) DeleteConfigurationSetEventDestinationRequest(arg0 *pinpointsmsvoice.DeleteConfigurationSetEventDestinationInput) (*request.Request, *pinpointsmsvoice.DeleteConfigurationSetEventDestinationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteConfigurationSetEventDestinationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pinpointsmsvoice.DeleteConfigurationSetEventDestinationOutput)
	return ret0, ret1
}

// DeleteConfigurationSetEventDestinationRequest indicates an expected call of DeleteConfigurationSetEventDestinationRequest
func (mr *MockPinpointSMSVoiceAPIMockRecorder) DeleteConfigurationSetEventDestinationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConfigurationSetEventDestinationRequest", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).DeleteConfigurationSetEventDestinationRequest), arg0)
}

// DeleteConfigurationSetEventDestinationWithContext mocks base method
func (m *MockPinpointSMSVoiceAPI) DeleteConfigurationSetEventDestinationWithContext(arg0 context.Context, arg1 *pinpointsmsvoice.DeleteConfigurationSetEventDestinationInput, arg2 ...request.Option) (*pinpointsmsvoice.DeleteConfigurationSetEventDestinationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteConfigurationSetEventDestinationWithContext", varargs...)
	ret0, _ := ret[0].(*pinpointsmsvoice.DeleteConfigurationSetEventDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteConfigurationSetEventDestinationWithContext indicates an expected call of DeleteConfigurationSetEventDestinationWithContext
func (mr *MockPinpointSMSVoiceAPIMockRecorder) DeleteConfigurationSetEventDestinationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConfigurationSetEventDestinationWithContext", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).DeleteConfigurationSetEventDestinationWithContext), varargs...)
}

// DeleteConfigurationSetRequest mocks base method
func (m *MockPinpointSMSVoiceAPI) DeleteConfigurationSetRequest(arg0 *pinpointsmsvoice.DeleteConfigurationSetInput) (*request.Request, *pinpointsmsvoice.DeleteConfigurationSetOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteConfigurationSetRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pinpointsmsvoice.DeleteConfigurationSetOutput)
	return ret0, ret1
}

// DeleteConfigurationSetRequest indicates an expected call of DeleteConfigurationSetRequest
func (mr *MockPinpointSMSVoiceAPIMockRecorder) DeleteConfigurationSetRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConfigurationSetRequest", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).DeleteConfigurationSetRequest), arg0)
}

// DeleteConfigurationSetWithContext mocks base method
func (m *MockPinpointSMSVoiceAPI) DeleteConfigurationSetWithContext(arg0 context.Context, arg1 *pinpointsmsvoice.DeleteConfigurationSetInput, arg2 ...request.Option) (*pinpointsmsvoice.DeleteConfigurationSetOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteConfigurationSetWithContext", varargs...)
	ret0, _ := ret[0].(*pinpointsmsvoice.DeleteConfigurationSetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteConfigurationSetWithContext indicates an expected call of DeleteConfigurationSetWithContext
func (mr *MockPinpointSMSVoiceAPIMockRecorder) DeleteConfigurationSetWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConfigurationSetWithContext", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).DeleteConfigurationSetWithContext), varargs...)
}

// GetConfigurationSetEventDestinations mocks base method
func (m *MockPinpointSMSVoiceAPI) GetConfigurationSetEventDestinations(arg0 *pinpointsmsvoice.GetConfigurationSetEventDestinationsInput) (*pinpointsmsvoice.GetConfigurationSetEventDestinationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigurationSetEventDestinations", arg0)
	ret0, _ := ret[0].(*pinpointsmsvoice.GetConfigurationSetEventDestinationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigurationSetEventDestinations indicates an expected call of GetConfigurationSetEventDestinations
func (mr *MockPinpointSMSVoiceAPIMockRecorder) GetConfigurationSetEventDestinations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigurationSetEventDestinations", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).GetConfigurationSetEventDestinations), arg0)
}

// GetConfigurationSetEventDestinationsRequest mocks base method
func (m *MockPinpointSMSVoiceAPI) GetConfigurationSetEventDestinationsRequest(arg0 *pinpointsmsvoice.GetConfigurationSetEventDestinationsInput) (*request.Request, *pinpointsmsvoice.GetConfigurationSetEventDestinationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigurationSetEventDestinationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pinpointsmsvoice.GetConfigurationSetEventDestinationsOutput)
	return ret0, ret1
}

// GetConfigurationSetEventDestinationsRequest indicates an expected call of GetConfigurationSetEventDestinationsRequest
func (mr *MockPinpointSMSVoiceAPIMockRecorder) GetConfigurationSetEventDestinationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigurationSetEventDestinationsRequest", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).GetConfigurationSetEventDestinationsRequest), arg0)
}

// GetConfigurationSetEventDestinationsWithContext mocks base method
func (m *MockPinpointSMSVoiceAPI) GetConfigurationSetEventDestinationsWithContext(arg0 context.Context, arg1 *pinpointsmsvoice.GetConfigurationSetEventDestinationsInput, arg2 ...request.Option) (*pinpointsmsvoice.GetConfigurationSetEventDestinationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetConfigurationSetEventDestinationsWithContext", varargs...)
	ret0, _ := ret[0].(*pinpointsmsvoice.GetConfigurationSetEventDestinationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigurationSetEventDestinationsWithContext indicates an expected call of GetConfigurationSetEventDestinationsWithContext
func (mr *MockPinpointSMSVoiceAPIMockRecorder) GetConfigurationSetEventDestinationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigurationSetEventDestinationsWithContext", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).GetConfigurationSetEventDestinationsWithContext), varargs...)
}

// ListConfigurationSets mocks base method
func (m *MockPinpointSMSVoiceAPI) ListConfigurationSets(arg0 *pinpointsmsvoice.ListConfigurationSetsInput) (*pinpointsmsvoice.ListConfigurationSetsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListConfigurationSets", arg0)
	ret0, _ := ret[0].(*pinpointsmsvoice.ListConfigurationSetsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListConfigurationSets indicates an expected call of ListConfigurationSets
func (mr *MockPinpointSMSVoiceAPIMockRecorder) ListConfigurationSets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConfigurationSets", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).ListConfigurationSets), arg0)
}

// ListConfigurationSetsRequest mocks base method
func (m *MockPinpointSMSVoiceAPI) ListConfigurationSetsRequest(arg0 *pinpointsmsvoice.ListConfigurationSetsInput) (*request.Request, *pinpointsmsvoice.ListConfigurationSetsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListConfigurationSetsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pinpointsmsvoice.ListConfigurationSetsOutput)
	return ret0, ret1
}

// ListConfigurationSetsRequest indicates an expected call of ListConfigurationSetsRequest
func (mr *MockPinpointSMSVoiceAPIMockRecorder) ListConfigurationSetsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConfigurationSetsRequest", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).ListConfigurationSetsRequest), arg0)
}

// ListConfigurationSetsWithContext mocks base method
func (m *MockPinpointSMSVoiceAPI) ListConfigurationSetsWithContext(arg0 context.Context, arg1 *pinpointsmsvoice.ListConfigurationSetsInput, arg2 ...request.Option) (*pinpointsmsvoice.ListConfigurationSetsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListConfigurationSetsWithContext", varargs...)
	ret0, _ := ret[0].(*pinpointsmsvoice.ListConfigurationSetsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListConfigurationSetsWithContext indicates an expected call of ListConfigurationSetsWithContext
func (mr *MockPinpointSMSVoiceAPIMockRecorder) ListConfigurationSetsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConfigurationSetsWithContext", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).ListConfigurationSetsWithContext), varargs...)
}

// SendVoiceMessage mocks base method
func (m *MockPinpointSMSVoiceAPI) SendVoiceMessage(arg0 *pinpointsmsvoice.SendVoiceMessageInput) (*pinpointsmsvoice.SendVoiceMessageOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendVoiceMessage", arg0)
	ret0, _ := ret[0].(*pinpointsmsvoice.SendVoiceMessageOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendVoiceMessage indicates an expected call of SendVoiceMessage
func (mr *MockPinpointSMSVoiceAPIMockRecorder) SendVoiceMessage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendVoiceMessage", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).SendVoiceMessage), arg0)
}

// SendVoiceMessageRequest mocks base method
func (m *MockPinpointSMSVoiceAPI) SendVoiceMessageRequest(arg0 *pinpointsmsvoice.SendVoiceMessageInput) (*request.Request, *pinpointsmsvoice.SendVoiceMessageOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendVoiceMessageRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pinpointsmsvoice.SendVoiceMessageOutput)
	return ret0, ret1
}

// SendVoiceMessageRequest indicates an expected call of SendVoiceMessageRequest
func (mr *MockPinpointSMSVoiceAPIMockRecorder) SendVoiceMessageRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendVoiceMessageRequest", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).SendVoiceMessageRequest), arg0)
}

// SendVoiceMessageWithContext mocks base method
func (m *MockPinpointSMSVoiceAPI) SendVoiceMessageWithContext(arg0 context.Context, arg1 *pinpointsmsvoice.SendVoiceMessageInput, arg2 ...request.Option) (*pinpointsmsvoice.SendVoiceMessageOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SendVoiceMessageWithContext", varargs...)
	ret0, _ := ret[0].(*pinpointsmsvoice.SendVoiceMessageOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendVoiceMessageWithContext indicates an expected call of SendVoiceMessageWithContext
func (mr *MockPinpointSMSVoiceAPIMockRecorder) SendVoiceMessageWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendVoiceMessageWithContext", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).SendVoiceMessageWithContext), varargs...)
}

// UpdateConfigurationSetEventDestination mocks base method
func (m *MockPinpointSMSVoiceAPI) UpdateConfigurationSetEventDestination(arg0 *pinpointsmsvoice.UpdateConfigurationSetEventDestinationInput) (*pinpointsmsvoice.UpdateConfigurationSetEventDestinationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateConfigurationSetEventDestination", arg0)
	ret0, _ := ret[0].(*pinpointsmsvoice.UpdateConfigurationSetEventDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateConfigurationSetEventDestination indicates an expected call of UpdateConfigurationSetEventDestination
func (mr *MockPinpointSMSVoiceAPIMockRecorder) UpdateConfigurationSetEventDestination(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateConfigurationSetEventDestination", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).UpdateConfigurationSetEventDestination), arg0)
}

// UpdateConfigurationSetEventDestinationRequest mocks base method
func (m *MockPinpointSMSVoiceAPI) UpdateConfigurationSetEventDestinationRequest(arg0 *pinpointsmsvoice.UpdateConfigurationSetEventDestinationInput) (*request.Request, *pinpointsmsvoice.UpdateConfigurationSetEventDestinationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateConfigurationSetEventDestinationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pinpointsmsvoice.UpdateConfigurationSetEventDestinationOutput)
	return ret0, ret1
}

// UpdateConfigurationSetEventDestinationRequest indicates an expected call of UpdateConfigurationSetEventDestinationRequest
func (mr *MockPinpointSMSVoiceAPIMockRecorder) UpdateConfigurationSetEventDestinationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateConfigurationSetEventDestinationRequest", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).UpdateConfigurationSetEventDestinationRequest), arg0)
}

// UpdateConfigurationSetEventDestinationWithContext mocks base method
func (m *MockPinpointSMSVoiceAPI) UpdateConfigurationSetEventDestinationWithContext(arg0 context.Context, arg1 *pinpointsmsvoice.UpdateConfigurationSetEventDestinationInput, arg2 ...request.Option) (*pinpointsmsvoice.UpdateConfigurationSetEventDestinationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateConfigurationSetEventDestinationWithContext", varargs...)
	ret0, _ := ret[0].(*pinpointsmsvoice.UpdateConfigurationSetEventDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateConfigurationSetEventDestinationWithContext indicates an expected call of UpdateConfigurationSetEventDestinationWithContext
func (mr *MockPinpointSMSVoiceAPIMockRecorder) UpdateConfigurationSetEventDestinationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateConfigurationSetEventDestinationWithContext", reflect.TypeOf((*MockPinpointSMSVoiceAPI)(nil).UpdateConfigurationSetEventDestinationWithContext), varargs...)
}
