// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/backupgateway/backupgatewayiface (interfaces: BackupGatewayAPI)

// Package backupgatewaymock is a generated GoMock package.
package backupgatewaymock

import (
	context "context"
	reflect "reflect"

	request "github.com/aws/aws-sdk-go/aws/request"
	backupgateway "github.com/aws/aws-sdk-go/service/backupgateway"
	gomock "github.com/golang/mock/gomock"
)

// MockBackupGatewayAPI is a mock of BackupGatewayAPI interface.
type MockBackupGatewayAPI struct {
	ctrl     *gomock.Controller
	recorder *MockBackupGatewayAPIMockRecorder
}

// MockBackupGatewayAPIMockRecorder is the mock recorder for MockBackupGatewayAPI.
type MockBackupGatewayAPIMockRecorder struct {
	mock *MockBackupGatewayAPI
}

// NewMockBackupGatewayAPI creates a new mock instance.
func NewMockBackupGatewayAPI(ctrl *gomock.Controller) *MockBackupGatewayAPI {
	mock := &MockBackupGatewayAPI{ctrl: ctrl}
	mock.recorder = &MockBackupGatewayAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBackupGatewayAPI) EXPECT() *MockBackupGatewayAPIMockRecorder {
	return m.recorder
}

// AssociateGatewayToServer mocks base method.
func (m *MockBackupGatewayAPI) AssociateGatewayToServer(arg0 *backupgateway.AssociateGatewayToServerInput) (*backupgateway.AssociateGatewayToServerOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateGatewayToServer", arg0)
	ret0, _ := ret[0].(*backupgateway.AssociateGatewayToServerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateGatewayToServer indicates an expected call of AssociateGatewayToServer.
func (mr *MockBackupGatewayAPIMockRecorder) AssociateGatewayToServer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateGatewayToServer", reflect.TypeOf((*MockBackupGatewayAPI)(nil).AssociateGatewayToServer), arg0)
}

// AssociateGatewayToServerRequest mocks base method.
func (m *MockBackupGatewayAPI) AssociateGatewayToServerRequest(arg0 *backupgateway.AssociateGatewayToServerInput) (*request.Request, *backupgateway.AssociateGatewayToServerOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateGatewayToServerRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.AssociateGatewayToServerOutput)
	return ret0, ret1
}

// AssociateGatewayToServerRequest indicates an expected call of AssociateGatewayToServerRequest.
func (mr *MockBackupGatewayAPIMockRecorder) AssociateGatewayToServerRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateGatewayToServerRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).AssociateGatewayToServerRequest), arg0)
}

// AssociateGatewayToServerWithContext mocks base method.
func (m *MockBackupGatewayAPI) AssociateGatewayToServerWithContext(arg0 context.Context, arg1 *backupgateway.AssociateGatewayToServerInput, arg2 ...request.Option) (*backupgateway.AssociateGatewayToServerOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AssociateGatewayToServerWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.AssociateGatewayToServerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateGatewayToServerWithContext indicates an expected call of AssociateGatewayToServerWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) AssociateGatewayToServerWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateGatewayToServerWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).AssociateGatewayToServerWithContext), varargs...)
}

// CreateGateway mocks base method.
func (m *MockBackupGatewayAPI) CreateGateway(arg0 *backupgateway.CreateGatewayInput) (*backupgateway.CreateGatewayOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGateway", arg0)
	ret0, _ := ret[0].(*backupgateway.CreateGatewayOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateGateway indicates an expected call of CreateGateway.
func (mr *MockBackupGatewayAPIMockRecorder) CreateGateway(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGateway", reflect.TypeOf((*MockBackupGatewayAPI)(nil).CreateGateway), arg0)
}

// CreateGatewayRequest mocks base method.
func (m *MockBackupGatewayAPI) CreateGatewayRequest(arg0 *backupgateway.CreateGatewayInput) (*request.Request, *backupgateway.CreateGatewayOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGatewayRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.CreateGatewayOutput)
	return ret0, ret1
}

// CreateGatewayRequest indicates an expected call of CreateGatewayRequest.
func (mr *MockBackupGatewayAPIMockRecorder) CreateGatewayRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGatewayRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).CreateGatewayRequest), arg0)
}

// CreateGatewayWithContext mocks base method.
func (m *MockBackupGatewayAPI) CreateGatewayWithContext(arg0 context.Context, arg1 *backupgateway.CreateGatewayInput, arg2 ...request.Option) (*backupgateway.CreateGatewayOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateGatewayWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.CreateGatewayOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateGatewayWithContext indicates an expected call of CreateGatewayWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) CreateGatewayWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGatewayWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).CreateGatewayWithContext), varargs...)
}

// DeleteGateway mocks base method.
func (m *MockBackupGatewayAPI) DeleteGateway(arg0 *backupgateway.DeleteGatewayInput) (*backupgateway.DeleteGatewayOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteGateway", arg0)
	ret0, _ := ret[0].(*backupgateway.DeleteGatewayOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteGateway indicates an expected call of DeleteGateway.
func (mr *MockBackupGatewayAPIMockRecorder) DeleteGateway(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGateway", reflect.TypeOf((*MockBackupGatewayAPI)(nil).DeleteGateway), arg0)
}

// DeleteGatewayRequest mocks base method.
func (m *MockBackupGatewayAPI) DeleteGatewayRequest(arg0 *backupgateway.DeleteGatewayInput) (*request.Request, *backupgateway.DeleteGatewayOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteGatewayRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.DeleteGatewayOutput)
	return ret0, ret1
}

// DeleteGatewayRequest indicates an expected call of DeleteGatewayRequest.
func (mr *MockBackupGatewayAPIMockRecorder) DeleteGatewayRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGatewayRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).DeleteGatewayRequest), arg0)
}

// DeleteGatewayWithContext mocks base method.
func (m *MockBackupGatewayAPI) DeleteGatewayWithContext(arg0 context.Context, arg1 *backupgateway.DeleteGatewayInput, arg2 ...request.Option) (*backupgateway.DeleteGatewayOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteGatewayWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.DeleteGatewayOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteGatewayWithContext indicates an expected call of DeleteGatewayWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) DeleteGatewayWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGatewayWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).DeleteGatewayWithContext), varargs...)
}

// DeleteHypervisor mocks base method.
func (m *MockBackupGatewayAPI) DeleteHypervisor(arg0 *backupgateway.DeleteHypervisorInput) (*backupgateway.DeleteHypervisorOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteHypervisor", arg0)
	ret0, _ := ret[0].(*backupgateway.DeleteHypervisorOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteHypervisor indicates an expected call of DeleteHypervisor.
func (mr *MockBackupGatewayAPIMockRecorder) DeleteHypervisor(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteHypervisor", reflect.TypeOf((*MockBackupGatewayAPI)(nil).DeleteHypervisor), arg0)
}

// DeleteHypervisorRequest mocks base method.
func (m *MockBackupGatewayAPI) DeleteHypervisorRequest(arg0 *backupgateway.DeleteHypervisorInput) (*request.Request, *backupgateway.DeleteHypervisorOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteHypervisorRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.DeleteHypervisorOutput)
	return ret0, ret1
}

// DeleteHypervisorRequest indicates an expected call of DeleteHypervisorRequest.
func (mr *MockBackupGatewayAPIMockRecorder) DeleteHypervisorRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteHypervisorRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).DeleteHypervisorRequest), arg0)
}

// DeleteHypervisorWithContext mocks base method.
func (m *MockBackupGatewayAPI) DeleteHypervisorWithContext(arg0 context.Context, arg1 *backupgateway.DeleteHypervisorInput, arg2 ...request.Option) (*backupgateway.DeleteHypervisorOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteHypervisorWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.DeleteHypervisorOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteHypervisorWithContext indicates an expected call of DeleteHypervisorWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) DeleteHypervisorWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteHypervisorWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).DeleteHypervisorWithContext), varargs...)
}

// DisassociateGatewayFromServer mocks base method.
func (m *MockBackupGatewayAPI) DisassociateGatewayFromServer(arg0 *backupgateway.DisassociateGatewayFromServerInput) (*backupgateway.DisassociateGatewayFromServerOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateGatewayFromServer", arg0)
	ret0, _ := ret[0].(*backupgateway.DisassociateGatewayFromServerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateGatewayFromServer indicates an expected call of DisassociateGatewayFromServer.
func (mr *MockBackupGatewayAPIMockRecorder) DisassociateGatewayFromServer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateGatewayFromServer", reflect.TypeOf((*MockBackupGatewayAPI)(nil).DisassociateGatewayFromServer), arg0)
}

// DisassociateGatewayFromServerRequest mocks base method.
func (m *MockBackupGatewayAPI) DisassociateGatewayFromServerRequest(arg0 *backupgateway.DisassociateGatewayFromServerInput) (*request.Request, *backupgateway.DisassociateGatewayFromServerOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateGatewayFromServerRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.DisassociateGatewayFromServerOutput)
	return ret0, ret1
}

// DisassociateGatewayFromServerRequest indicates an expected call of DisassociateGatewayFromServerRequest.
func (mr *MockBackupGatewayAPIMockRecorder) DisassociateGatewayFromServerRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateGatewayFromServerRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).DisassociateGatewayFromServerRequest), arg0)
}

// DisassociateGatewayFromServerWithContext mocks base method.
func (m *MockBackupGatewayAPI) DisassociateGatewayFromServerWithContext(arg0 context.Context, arg1 *backupgateway.DisassociateGatewayFromServerInput, arg2 ...request.Option) (*backupgateway.DisassociateGatewayFromServerOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DisassociateGatewayFromServerWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.DisassociateGatewayFromServerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateGatewayFromServerWithContext indicates an expected call of DisassociateGatewayFromServerWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) DisassociateGatewayFromServerWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateGatewayFromServerWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).DisassociateGatewayFromServerWithContext), varargs...)
}

// ImportHypervisorConfiguration mocks base method.
func (m *MockBackupGatewayAPI) ImportHypervisorConfiguration(arg0 *backupgateway.ImportHypervisorConfigurationInput) (*backupgateway.ImportHypervisorConfigurationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImportHypervisorConfiguration", arg0)
	ret0, _ := ret[0].(*backupgateway.ImportHypervisorConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImportHypervisorConfiguration indicates an expected call of ImportHypervisorConfiguration.
func (mr *MockBackupGatewayAPIMockRecorder) ImportHypervisorConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportHypervisorConfiguration", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ImportHypervisorConfiguration), arg0)
}

// ImportHypervisorConfigurationRequest mocks base method.
func (m *MockBackupGatewayAPI) ImportHypervisorConfigurationRequest(arg0 *backupgateway.ImportHypervisorConfigurationInput) (*request.Request, *backupgateway.ImportHypervisorConfigurationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImportHypervisorConfigurationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.ImportHypervisorConfigurationOutput)
	return ret0, ret1
}

// ImportHypervisorConfigurationRequest indicates an expected call of ImportHypervisorConfigurationRequest.
func (mr *MockBackupGatewayAPIMockRecorder) ImportHypervisorConfigurationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportHypervisorConfigurationRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ImportHypervisorConfigurationRequest), arg0)
}

// ImportHypervisorConfigurationWithContext mocks base method.
func (m *MockBackupGatewayAPI) ImportHypervisorConfigurationWithContext(arg0 context.Context, arg1 *backupgateway.ImportHypervisorConfigurationInput, arg2 ...request.Option) (*backupgateway.ImportHypervisorConfigurationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ImportHypervisorConfigurationWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.ImportHypervisorConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImportHypervisorConfigurationWithContext indicates an expected call of ImportHypervisorConfigurationWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) ImportHypervisorConfigurationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportHypervisorConfigurationWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ImportHypervisorConfigurationWithContext), varargs...)
}

// ListGateways mocks base method.
func (m *MockBackupGatewayAPI) ListGateways(arg0 *backupgateway.ListGatewaysInput) (*backupgateway.ListGatewaysOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGateways", arg0)
	ret0, _ := ret[0].(*backupgateway.ListGatewaysOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGateways indicates an expected call of ListGateways.
func (mr *MockBackupGatewayAPIMockRecorder) ListGateways(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGateways", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListGateways), arg0)
}

// ListGatewaysPages mocks base method.
func (m *MockBackupGatewayAPI) ListGatewaysPages(arg0 *backupgateway.ListGatewaysInput, arg1 func(*backupgateway.ListGatewaysOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGatewaysPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListGatewaysPages indicates an expected call of ListGatewaysPages.
func (mr *MockBackupGatewayAPIMockRecorder) ListGatewaysPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGatewaysPages", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListGatewaysPages), arg0, arg1)
}

// ListGatewaysPagesWithContext mocks base method.
func (m *MockBackupGatewayAPI) ListGatewaysPagesWithContext(arg0 context.Context, arg1 *backupgateway.ListGatewaysInput, arg2 func(*backupgateway.ListGatewaysOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListGatewaysPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListGatewaysPagesWithContext indicates an expected call of ListGatewaysPagesWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) ListGatewaysPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGatewaysPagesWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListGatewaysPagesWithContext), varargs...)
}

// ListGatewaysRequest mocks base method.
func (m *MockBackupGatewayAPI) ListGatewaysRequest(arg0 *backupgateway.ListGatewaysInput) (*request.Request, *backupgateway.ListGatewaysOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGatewaysRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.ListGatewaysOutput)
	return ret0, ret1
}

// ListGatewaysRequest indicates an expected call of ListGatewaysRequest.
func (mr *MockBackupGatewayAPIMockRecorder) ListGatewaysRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGatewaysRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListGatewaysRequest), arg0)
}

// ListGatewaysWithContext mocks base method.
func (m *MockBackupGatewayAPI) ListGatewaysWithContext(arg0 context.Context, arg1 *backupgateway.ListGatewaysInput, arg2 ...request.Option) (*backupgateway.ListGatewaysOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListGatewaysWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.ListGatewaysOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGatewaysWithContext indicates an expected call of ListGatewaysWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) ListGatewaysWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGatewaysWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListGatewaysWithContext), varargs...)
}

// ListHypervisors mocks base method.
func (m *MockBackupGatewayAPI) ListHypervisors(arg0 *backupgateway.ListHypervisorsInput) (*backupgateway.ListHypervisorsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHypervisors", arg0)
	ret0, _ := ret[0].(*backupgateway.ListHypervisorsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListHypervisors indicates an expected call of ListHypervisors.
func (mr *MockBackupGatewayAPIMockRecorder) ListHypervisors(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHypervisors", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListHypervisors), arg0)
}

// ListHypervisorsPages mocks base method.
func (m *MockBackupGatewayAPI) ListHypervisorsPages(arg0 *backupgateway.ListHypervisorsInput, arg1 func(*backupgateway.ListHypervisorsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHypervisorsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListHypervisorsPages indicates an expected call of ListHypervisorsPages.
func (mr *MockBackupGatewayAPIMockRecorder) ListHypervisorsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHypervisorsPages", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListHypervisorsPages), arg0, arg1)
}

// ListHypervisorsPagesWithContext mocks base method.
func (m *MockBackupGatewayAPI) ListHypervisorsPagesWithContext(arg0 context.Context, arg1 *backupgateway.ListHypervisorsInput, arg2 func(*backupgateway.ListHypervisorsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListHypervisorsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListHypervisorsPagesWithContext indicates an expected call of ListHypervisorsPagesWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) ListHypervisorsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHypervisorsPagesWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListHypervisorsPagesWithContext), varargs...)
}

// ListHypervisorsRequest mocks base method.
func (m *MockBackupGatewayAPI) ListHypervisorsRequest(arg0 *backupgateway.ListHypervisorsInput) (*request.Request, *backupgateway.ListHypervisorsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHypervisorsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.ListHypervisorsOutput)
	return ret0, ret1
}

// ListHypervisorsRequest indicates an expected call of ListHypervisorsRequest.
func (mr *MockBackupGatewayAPIMockRecorder) ListHypervisorsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHypervisorsRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListHypervisorsRequest), arg0)
}

// ListHypervisorsWithContext mocks base method.
func (m *MockBackupGatewayAPI) ListHypervisorsWithContext(arg0 context.Context, arg1 *backupgateway.ListHypervisorsInput, arg2 ...request.Option) (*backupgateway.ListHypervisorsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListHypervisorsWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.ListHypervisorsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListHypervisorsWithContext indicates an expected call of ListHypervisorsWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) ListHypervisorsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHypervisorsWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListHypervisorsWithContext), varargs...)
}

// ListTagsForResource mocks base method.
func (m *MockBackupGatewayAPI) ListTagsForResource(arg0 *backupgateway.ListTagsForResourceInput) (*backupgateway.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResource", arg0)
	ret0, _ := ret[0].(*backupgateway.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResource indicates an expected call of ListTagsForResource.
func (mr *MockBackupGatewayAPIMockRecorder) ListTagsForResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResource", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListTagsForResource), arg0)
}

// ListTagsForResourceRequest mocks base method.
func (m *MockBackupGatewayAPI) ListTagsForResourceRequest(arg0 *backupgateway.ListTagsForResourceInput) (*request.Request, *backupgateway.ListTagsForResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.ListTagsForResourceOutput)
	return ret0, ret1
}

// ListTagsForResourceRequest indicates an expected call of ListTagsForResourceRequest.
func (mr *MockBackupGatewayAPIMockRecorder) ListTagsForResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListTagsForResourceRequest), arg0)
}

// ListTagsForResourceWithContext mocks base method.
func (m *MockBackupGatewayAPI) ListTagsForResourceWithContext(arg0 context.Context, arg1 *backupgateway.ListTagsForResourceInput, arg2 ...request.Option) (*backupgateway.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTagsForResourceWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResourceWithContext indicates an expected call of ListTagsForResourceWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) ListTagsForResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListTagsForResourceWithContext), varargs...)
}

// ListVirtualMachines mocks base method.
func (m *MockBackupGatewayAPI) ListVirtualMachines(arg0 *backupgateway.ListVirtualMachinesInput) (*backupgateway.ListVirtualMachinesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVirtualMachines", arg0)
	ret0, _ := ret[0].(*backupgateway.ListVirtualMachinesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVirtualMachines indicates an expected call of ListVirtualMachines.
func (mr *MockBackupGatewayAPIMockRecorder) ListVirtualMachines(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVirtualMachines", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListVirtualMachines), arg0)
}

// ListVirtualMachinesPages mocks base method.
func (m *MockBackupGatewayAPI) ListVirtualMachinesPages(arg0 *backupgateway.ListVirtualMachinesInput, arg1 func(*backupgateway.ListVirtualMachinesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVirtualMachinesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListVirtualMachinesPages indicates an expected call of ListVirtualMachinesPages.
func (mr *MockBackupGatewayAPIMockRecorder) ListVirtualMachinesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVirtualMachinesPages", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListVirtualMachinesPages), arg0, arg1)
}

// ListVirtualMachinesPagesWithContext mocks base method.
func (m *MockBackupGatewayAPI) ListVirtualMachinesPagesWithContext(arg0 context.Context, arg1 *backupgateway.ListVirtualMachinesInput, arg2 func(*backupgateway.ListVirtualMachinesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListVirtualMachinesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListVirtualMachinesPagesWithContext indicates an expected call of ListVirtualMachinesPagesWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) ListVirtualMachinesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVirtualMachinesPagesWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListVirtualMachinesPagesWithContext), varargs...)
}

// ListVirtualMachinesRequest mocks base method.
func (m *MockBackupGatewayAPI) ListVirtualMachinesRequest(arg0 *backupgateway.ListVirtualMachinesInput) (*request.Request, *backupgateway.ListVirtualMachinesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVirtualMachinesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.ListVirtualMachinesOutput)
	return ret0, ret1
}

// ListVirtualMachinesRequest indicates an expected call of ListVirtualMachinesRequest.
func (mr *MockBackupGatewayAPIMockRecorder) ListVirtualMachinesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVirtualMachinesRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListVirtualMachinesRequest), arg0)
}

// ListVirtualMachinesWithContext mocks base method.
func (m *MockBackupGatewayAPI) ListVirtualMachinesWithContext(arg0 context.Context, arg1 *backupgateway.ListVirtualMachinesInput, arg2 ...request.Option) (*backupgateway.ListVirtualMachinesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListVirtualMachinesWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.ListVirtualMachinesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVirtualMachinesWithContext indicates an expected call of ListVirtualMachinesWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) ListVirtualMachinesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVirtualMachinesWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).ListVirtualMachinesWithContext), varargs...)
}

// PutMaintenanceStartTime mocks base method.
func (m *MockBackupGatewayAPI) PutMaintenanceStartTime(arg0 *backupgateway.PutMaintenanceStartTimeInput) (*backupgateway.PutMaintenanceStartTimeOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutMaintenanceStartTime", arg0)
	ret0, _ := ret[0].(*backupgateway.PutMaintenanceStartTimeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutMaintenanceStartTime indicates an expected call of PutMaintenanceStartTime.
func (mr *MockBackupGatewayAPIMockRecorder) PutMaintenanceStartTime(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutMaintenanceStartTime", reflect.TypeOf((*MockBackupGatewayAPI)(nil).PutMaintenanceStartTime), arg0)
}

// PutMaintenanceStartTimeRequest mocks base method.
func (m *MockBackupGatewayAPI) PutMaintenanceStartTimeRequest(arg0 *backupgateway.PutMaintenanceStartTimeInput) (*request.Request, *backupgateway.PutMaintenanceStartTimeOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutMaintenanceStartTimeRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.PutMaintenanceStartTimeOutput)
	return ret0, ret1
}

// PutMaintenanceStartTimeRequest indicates an expected call of PutMaintenanceStartTimeRequest.
func (mr *MockBackupGatewayAPIMockRecorder) PutMaintenanceStartTimeRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutMaintenanceStartTimeRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).PutMaintenanceStartTimeRequest), arg0)
}

// PutMaintenanceStartTimeWithContext mocks base method.
func (m *MockBackupGatewayAPI) PutMaintenanceStartTimeWithContext(arg0 context.Context, arg1 *backupgateway.PutMaintenanceStartTimeInput, arg2 ...request.Option) (*backupgateway.PutMaintenanceStartTimeOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "PutMaintenanceStartTimeWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.PutMaintenanceStartTimeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutMaintenanceStartTimeWithContext indicates an expected call of PutMaintenanceStartTimeWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) PutMaintenanceStartTimeWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutMaintenanceStartTimeWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).PutMaintenanceStartTimeWithContext), varargs...)
}

// TagResource mocks base method.
func (m *MockBackupGatewayAPI) TagResource(arg0 *backupgateway.TagResourceInput) (*backupgateway.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResource", arg0)
	ret0, _ := ret[0].(*backupgateway.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResource indicates an expected call of TagResource.
func (mr *MockBackupGatewayAPIMockRecorder) TagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResource", reflect.TypeOf((*MockBackupGatewayAPI)(nil).TagResource), arg0)
}

// TagResourceRequest mocks base method.
func (m *MockBackupGatewayAPI) TagResourceRequest(arg0 *backupgateway.TagResourceInput) (*request.Request, *backupgateway.TagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.TagResourceOutput)
	return ret0, ret1
}

// TagResourceRequest indicates an expected call of TagResourceRequest.
func (mr *MockBackupGatewayAPIMockRecorder) TagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).TagResourceRequest), arg0)
}

// TagResourceWithContext mocks base method.
func (m *MockBackupGatewayAPI) TagResourceWithContext(arg0 context.Context, arg1 *backupgateway.TagResourceInput, arg2 ...request.Option) (*backupgateway.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "TagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResourceWithContext indicates an expected call of TagResourceWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) TagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).TagResourceWithContext), varargs...)
}

// TestHypervisorConfiguration mocks base method.
func (m *MockBackupGatewayAPI) TestHypervisorConfiguration(arg0 *backupgateway.TestHypervisorConfigurationInput) (*backupgateway.TestHypervisorConfigurationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestHypervisorConfiguration", arg0)
	ret0, _ := ret[0].(*backupgateway.TestHypervisorConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TestHypervisorConfiguration indicates an expected call of TestHypervisorConfiguration.
func (mr *MockBackupGatewayAPIMockRecorder) TestHypervisorConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestHypervisorConfiguration", reflect.TypeOf((*MockBackupGatewayAPI)(nil).TestHypervisorConfiguration), arg0)
}

// TestHypervisorConfigurationRequest mocks base method.
func (m *MockBackupGatewayAPI) TestHypervisorConfigurationRequest(arg0 *backupgateway.TestHypervisorConfigurationInput) (*request.Request, *backupgateway.TestHypervisorConfigurationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestHypervisorConfigurationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.TestHypervisorConfigurationOutput)
	return ret0, ret1
}

// TestHypervisorConfigurationRequest indicates an expected call of TestHypervisorConfigurationRequest.
func (mr *MockBackupGatewayAPIMockRecorder) TestHypervisorConfigurationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestHypervisorConfigurationRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).TestHypervisorConfigurationRequest), arg0)
}

// TestHypervisorConfigurationWithContext mocks base method.
func (m *MockBackupGatewayAPI) TestHypervisorConfigurationWithContext(arg0 context.Context, arg1 *backupgateway.TestHypervisorConfigurationInput, arg2 ...request.Option) (*backupgateway.TestHypervisorConfigurationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "TestHypervisorConfigurationWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.TestHypervisorConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TestHypervisorConfigurationWithContext indicates an expected call of TestHypervisorConfigurationWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) TestHypervisorConfigurationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestHypervisorConfigurationWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).TestHypervisorConfigurationWithContext), varargs...)
}

// UntagResource mocks base method.
func (m *MockBackupGatewayAPI) UntagResource(arg0 *backupgateway.UntagResourceInput) (*backupgateway.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResource", arg0)
	ret0, _ := ret[0].(*backupgateway.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResource indicates an expected call of UntagResource.
func (mr *MockBackupGatewayAPIMockRecorder) UntagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResource", reflect.TypeOf((*MockBackupGatewayAPI)(nil).UntagResource), arg0)
}

// UntagResourceRequest mocks base method.
func (m *MockBackupGatewayAPI) UntagResourceRequest(arg0 *backupgateway.UntagResourceInput) (*request.Request, *backupgateway.UntagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.UntagResourceOutput)
	return ret0, ret1
}

// UntagResourceRequest indicates an expected call of UntagResourceRequest.
func (mr *MockBackupGatewayAPIMockRecorder) UntagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).UntagResourceRequest), arg0)
}

// UntagResourceWithContext mocks base method.
func (m *MockBackupGatewayAPI) UntagResourceWithContext(arg0 context.Context, arg1 *backupgateway.UntagResourceInput, arg2 ...request.Option) (*backupgateway.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UntagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResourceWithContext indicates an expected call of UntagResourceWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) UntagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).UntagResourceWithContext), varargs...)
}

// UpdateGatewayInformation mocks base method.
func (m *MockBackupGatewayAPI) UpdateGatewayInformation(arg0 *backupgateway.UpdateGatewayInformationInput) (*backupgateway.UpdateGatewayInformationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateGatewayInformation", arg0)
	ret0, _ := ret[0].(*backupgateway.UpdateGatewayInformationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateGatewayInformation indicates an expected call of UpdateGatewayInformation.
func (mr *MockBackupGatewayAPIMockRecorder) UpdateGatewayInformation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateGatewayInformation", reflect.TypeOf((*MockBackupGatewayAPI)(nil).UpdateGatewayInformation), arg0)
}

// UpdateGatewayInformationRequest mocks base method.
func (m *MockBackupGatewayAPI) UpdateGatewayInformationRequest(arg0 *backupgateway.UpdateGatewayInformationInput) (*request.Request, *backupgateway.UpdateGatewayInformationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateGatewayInformationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.UpdateGatewayInformationOutput)
	return ret0, ret1
}

// UpdateGatewayInformationRequest indicates an expected call of UpdateGatewayInformationRequest.
func (mr *MockBackupGatewayAPIMockRecorder) UpdateGatewayInformationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateGatewayInformationRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).UpdateGatewayInformationRequest), arg0)
}

// UpdateGatewayInformationWithContext mocks base method.
func (m *MockBackupGatewayAPI) UpdateGatewayInformationWithContext(arg0 context.Context, arg1 *backupgateway.UpdateGatewayInformationInput, arg2 ...request.Option) (*backupgateway.UpdateGatewayInformationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateGatewayInformationWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.UpdateGatewayInformationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateGatewayInformationWithContext indicates an expected call of UpdateGatewayInformationWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) UpdateGatewayInformationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateGatewayInformationWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).UpdateGatewayInformationWithContext), varargs...)
}

// UpdateHypervisor mocks base method.
func (m *MockBackupGatewayAPI) UpdateHypervisor(arg0 *backupgateway.UpdateHypervisorInput) (*backupgateway.UpdateHypervisorOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateHypervisor", arg0)
	ret0, _ := ret[0].(*backupgateway.UpdateHypervisorOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateHypervisor indicates an expected call of UpdateHypervisor.
func (mr *MockBackupGatewayAPIMockRecorder) UpdateHypervisor(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateHypervisor", reflect.TypeOf((*MockBackupGatewayAPI)(nil).UpdateHypervisor), arg0)
}

// UpdateHypervisorRequest mocks base method.
func (m *MockBackupGatewayAPI) UpdateHypervisorRequest(arg0 *backupgateway.UpdateHypervisorInput) (*request.Request, *backupgateway.UpdateHypervisorOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateHypervisorRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*backupgateway.UpdateHypervisorOutput)
	return ret0, ret1
}

// UpdateHypervisorRequest indicates an expected call of UpdateHypervisorRequest.
func (mr *MockBackupGatewayAPIMockRecorder) UpdateHypervisorRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateHypervisorRequest", reflect.TypeOf((*MockBackupGatewayAPI)(nil).UpdateHypervisorRequest), arg0)
}

// UpdateHypervisorWithContext mocks base method.
func (m *MockBackupGatewayAPI) UpdateHypervisorWithContext(arg0 context.Context, arg1 *backupgateway.UpdateHypervisorInput, arg2 ...request.Option) (*backupgateway.UpdateHypervisorOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateHypervisorWithContext", varargs...)
	ret0, _ := ret[0].(*backupgateway.UpdateHypervisorOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateHypervisorWithContext indicates an expected call of UpdateHypervisorWithContext.
func (mr *MockBackupGatewayAPIMockRecorder) UpdateHypervisorWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateHypervisorWithContext", reflect.TypeOf((*MockBackupGatewayAPI)(nil).UpdateHypervisorWithContext), varargs...)
}
